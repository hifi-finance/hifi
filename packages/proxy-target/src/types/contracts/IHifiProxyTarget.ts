/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export interface IHifiProxyTargetInterface extends utils.Interface {
  functions: {
    "addLiquidity(address,uint256,uint256)": FunctionFragment;
    "addLiquidityWithSignature(address,uint256,uint256,uint256,bytes,bytes)": FunctionFragment;
    "borrowHToken(address,address,uint256)": FunctionFragment;
    "borrowHTokenAndAddLiquidity(address,address,uint256,uint256)": FunctionFragment;
    "borrowHTokenAndAddLiquidityWithSignature(address,address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "borrowHTokenAndBuyUnderlying(address,address,uint256,uint256)": FunctionFragment;
    "borrowHTokenAndSellHToken(address,address,uint256,uint256)": FunctionFragment;
    "buyHToken(address,uint256,uint256)": FunctionFragment;
    "buyHTokenAndAddLiquidity(address,uint256,uint256)": FunctionFragment;
    "buyHTokenAndAddLiquidityWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "buyHTokenAndRepayBorrow(address,address,uint256,uint256)": FunctionFragment;
    "buyHTokenAndRepayBorrowWithSignature(address,address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "buyHTokenWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "buyUnderlying(address,uint256,uint256)": FunctionFragment;
    "buyUnderlyingAndAddLiquidity(address,uint256,uint256)": FunctionFragment;
    "buyUnderlyingAndAddLiquidityWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "buyUnderlyingWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "depositCollateral(address,address,uint256)": FunctionFragment;
    "depositCollateralAndBorrowHToken(address,address,address,uint256,uint256)": FunctionFragment;
    "depositCollateralAndBorrowHTokenAndAddLiquidity(address,address,address,uint256,uint256,uint256)": FunctionFragment;
    "depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(address,address,address,uint256,uint256,uint256,uint256,bytes,bytes)": FunctionFragment;
    "depositCollateralAndBorrowHTokenAndSellHToken(address,address,address,uint256,uint256,uint256)": FunctionFragment;
    "depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(address,address,address,uint256,uint256,uint256,uint256,bytes)": FunctionFragment;
    "depositCollateralAndBorrowHTokenWithSignature(address,address,address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "depositCollateralWithSignature(address,address,uint256,uint256,bytes)": FunctionFragment;
    "depositUnderlying(address,uint256)": FunctionFragment;
    "depositUnderlyingAndMintHTokenAndAddLiquidity(address,uint256,uint256)": FunctionFragment;
    "depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "depositUnderlyingAndRepayBorrow(address,address,uint256)": FunctionFragment;
    "depositUnderlyingAndRepayBorrowWithSignature(address,address,uint256,uint256,bytes)": FunctionFragment;
    "depositUnderlyingWithSignature(address,uint256,uint256,bytes)": FunctionFragment;
    "redeem(address,uint256,uint256)": FunctionFragment;
    "redeemWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "removeLiquidity(address,uint256)": FunctionFragment;
    "removeLiquidityAndRedeem(address,uint256)": FunctionFragment;
    "removeLiquidityAndRedeemWithSignature(address,uint256,uint256,bytes)": FunctionFragment;
    "removeLiquidityAndSellHToken(address,uint256,uint256)": FunctionFragment;
    "removeLiquidityAndSellHTokenWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "removeLiquidityAndWithdrawUnderlying(address,uint256,uint256)": FunctionFragment;
    "removeLiquidityAndWithdrawUnderlyingWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "removeLiquidityWithSignature(address,uint256,uint256,bytes)": FunctionFragment;
    "repayBorrow(address,address,uint256)": FunctionFragment;
    "repayBorrowWithSignature(address,address,uint256,uint256,bytes)": FunctionFragment;
    "sellHToken(address,uint256,uint256)": FunctionFragment;
    "sellHTokenWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "sellUnderlying(address,uint256,uint256)": FunctionFragment;
    "sellUnderlyingAndRepayBorrow(address,address,uint256,uint256)": FunctionFragment;
    "sellUnderlyingAndRepayBorrowWithSignature(address,address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "sellUnderlyingWithSignature(address,uint256,uint256,uint256,bytes)": FunctionFragment;
    "withdrawCollateral(address,address,uint256)": FunctionFragment;
    "wrapEthAndDepositAndBorrowHTokenAndSellHToken(address,address,address,uint256,uint256)": FunctionFragment;
    "wrapEthAndDepositCollateral(address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addLiquidity"
      | "addLiquidityWithSignature"
      | "borrowHToken"
      | "borrowHTokenAndAddLiquidity"
      | "borrowHTokenAndAddLiquidityWithSignature"
      | "borrowHTokenAndBuyUnderlying"
      | "borrowHTokenAndSellHToken"
      | "buyHToken"
      | "buyHTokenAndAddLiquidity"
      | "buyHTokenAndAddLiquidityWithSignature"
      | "buyHTokenAndRepayBorrow"
      | "buyHTokenAndRepayBorrowWithSignature"
      | "buyHTokenWithSignature"
      | "buyUnderlying"
      | "buyUnderlyingAndAddLiquidity"
      | "buyUnderlyingAndAddLiquidityWithSignature"
      | "buyUnderlyingWithSignature"
      | "depositCollateral"
      | "depositCollateralAndBorrowHToken"
      | "depositCollateralAndBorrowHTokenAndAddLiquidity"
      | "depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature"
      | "depositCollateralAndBorrowHTokenAndSellHToken"
      | "depositCollateralAndBorrowHTokenAndSellHTokenWithSignature"
      | "depositCollateralAndBorrowHTokenWithSignature"
      | "depositCollateralWithSignature"
      | "depositUnderlying"
      | "depositUnderlyingAndMintHTokenAndAddLiquidity"
      | "depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature"
      | "depositUnderlyingAndRepayBorrow"
      | "depositUnderlyingAndRepayBorrowWithSignature"
      | "depositUnderlyingWithSignature"
      | "redeem"
      | "redeemWithSignature"
      | "removeLiquidity"
      | "removeLiquidityAndRedeem"
      | "removeLiquidityAndRedeemWithSignature"
      | "removeLiquidityAndSellHToken"
      | "removeLiquidityAndSellHTokenWithSignature"
      | "removeLiquidityAndWithdrawUnderlying"
      | "removeLiquidityAndWithdrawUnderlyingWithSignature"
      | "removeLiquidityWithSignature"
      | "repayBorrow"
      | "repayBorrowWithSignature"
      | "sellHToken"
      | "sellHTokenWithSignature"
      | "sellUnderlying"
      | "sellUnderlyingAndRepayBorrow"
      | "sellUnderlyingAndRepayBorrowWithSignature"
      | "sellUnderlyingWithSignature"
      | "withdrawCollateral"
      | "wrapEthAndDepositAndBorrowHTokenAndSellHToken"
      | "wrapEthAndDepositCollateral"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addLiquidity",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addLiquidityWithSignature",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowHToken",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowHTokenAndAddLiquidity",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowHTokenAndAddLiquidityWithSignature",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowHTokenAndBuyUnderlying",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowHTokenAndSellHToken",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHToken",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHTokenAndAddLiquidity",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHTokenAndAddLiquidityWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHTokenAndRepayBorrow",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHTokenAndRepayBorrowWithSignature",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "buyHTokenWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buyUnderlying",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyUnderlyingAndAddLiquidity",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "buyUnderlyingAndAddLiquidityWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "buyUnderlyingWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateral",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHToken",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHTokenAndAddLiquidity",
    values: [string, string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature",
    values: [
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHTokenAndSellHToken",
    values: [string, string, string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHTokenAndSellHTokenWithSignature",
    values: [
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralAndBorrowHTokenWithSignature",
    values: [
      string,
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "depositCollateralWithSignature",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlying",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlyingAndMintHTokenAndAddLiquidity",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlyingAndRepayBorrow",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlyingAndRepayBorrowWithSignature",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "depositUnderlyingWithSignature",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redeem",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidity",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndRedeem",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndRedeemWithSignature",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndSellHToken",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndSellHTokenWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndWithdrawUnderlying",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityAndWithdrawUnderlyingWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityWithSignature",
    values: [string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "repayBorrow",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "repayBorrowWithSignature",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "sellHToken",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sellHTokenWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "sellUnderlying",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sellUnderlyingAndRepayBorrow",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "sellUnderlyingAndRepayBorrowWithSignature",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "sellUnderlyingWithSignature",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawCollateral",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "wrapEthAndDepositAndBorrowHTokenAndSellHToken",
    values: [string, string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "wrapEthAndDepositCollateral",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowHTokenAndAddLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowHTokenAndAddLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowHTokenAndBuyUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowHTokenAndSellHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "buyHToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "buyHTokenAndAddLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyHTokenAndAddLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyHTokenAndRepayBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyHTokenAndRepayBorrowWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyHTokenWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyUnderlyingAndAddLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyUnderlyingAndAddLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "buyUnderlyingWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHTokenAndAddLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHTokenAndSellHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHTokenAndSellHTokenWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralAndBorrowHTokenWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositCollateralWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlyingAndMintHTokenAndAddLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlyingAndRepayBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlyingAndRepayBorrowWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositUnderlyingWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "redeem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndRedeem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndRedeemWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndSellHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndSellHTokenWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndWithdrawUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityAndWithdrawUnderlyingWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "repayBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "repayBorrowWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sellHToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "sellHTokenWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellUnderlying",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellUnderlyingAndRepayBorrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellUnderlyingAndRepayBorrowWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "sellUnderlyingWithSignature",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "wrapEthAndDepositAndBorrowHTokenAndSellHToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "wrapEthAndDepositCollateral",
    data: BytesLike
  ): Result;

  events: {
    "BorrowHTokenAndBuyUnderlying(address,uint256,uint256)": EventFragment;
    "BorrowHTokenAndSellHToken(address,uint256,uint256)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "BorrowHTokenAndBuyUnderlying"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BorrowHTokenAndSellHToken"): EventFragment;
}

export interface BorrowHTokenAndBuyUnderlyingEventObject {
  borrower: string;
  borrowAmount: BigNumber;
  underlyingAmount: BigNumber;
}
export type BorrowHTokenAndBuyUnderlyingEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  BorrowHTokenAndBuyUnderlyingEventObject
>;

export type BorrowHTokenAndBuyUnderlyingEventFilter =
  TypedEventFilter<BorrowHTokenAndBuyUnderlyingEvent>;

export interface BorrowHTokenAndSellHTokenEventObject {
  borrower: string;
  borrowAmount: BigNumber;
  underlyingAmount: BigNumber;
}
export type BorrowHTokenAndSellHTokenEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  BorrowHTokenAndSellHTokenEventObject
>;

export type BorrowHTokenAndSellHTokenEventFilter =
  TypedEventFilter<BorrowHTokenAndSellHTokenEvent>;

export interface IHifiProxyTarget extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IHifiProxyTargetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addLiquidity(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addLiquidityWithSignature(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowHToken(
      balanceSheet: string,
      hToken: string,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowHTokenAndAddLiquidity(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowHTokenAndBuyUnderlying(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowHTokenAndSellHToken(
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHToken(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHTokenAndAddLiquidity(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHTokenAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHTokenAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyHTokenWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyUnderlying(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyUnderlyingAndAddLiquidity(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyUnderlyingAndAddLiquidityWithSignature(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    buyUnderlyingWithSignature(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateral(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHToken(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHTokenAndAddLiquidity(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHTokenAndSellHToken(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralAndBorrowHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositCollateralWithSignature(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlying(
      hToken: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlyingAndMintHTokenAndAddLiquidity(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlyingAndRepayBorrow(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlyingAndRepayBorrowWithSignature(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    depositUnderlyingWithSignature(
      hToken: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    redeem(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    redeemWithSignature(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidity(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndRedeem(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndRedeemWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndSellHToken(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndSellHTokenWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndWithdrawUnderlying(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityAndWithdrawUnderlyingWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    repayBorrow(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    repayBorrowWithSignature(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellHToken(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellHTokenWithSignature(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellUnderlying(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellUnderlyingAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellUnderlyingAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sellUnderlyingWithSignature(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    withdrawCollateral(
      balanceSheet: string,
      collateral: string,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    wrapEthAndDepositAndBorrowHTokenAndSellHToken(
      weth: string,
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    wrapEthAndDepositCollateral(
      weth: string,
      balanceSheet: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addLiquidity(
    hifiPool: string,
    underlyingOffered: BigNumberish,
    maxHTokenRequired: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addLiquidityWithSignature(
    hifiPool: string,
    underlyingOffered: BigNumberish,
    maxHTokenRequired: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowHToken(
    balanceSheet: string,
    hToken: string,
    borrowAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowHTokenAndAddLiquidity(
    balanceSheet: string,
    hifiPool: string,
    maxBorrowAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowHTokenAndAddLiquidityWithSignature(
    balanceSheet: string,
    hifiPool: string,
    maxBorrowAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowHTokenAndBuyUnderlying(
    balanceSheet: string,
    hifiPool: string,
    maxBorrowAmount: BigNumberish,
    underlyingOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowHTokenAndSellHToken(
    balanceSheet: string,
    hifiPool: string,
    borrowAmount: BigNumberish,
    minUnderlyingOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHToken(
    hifiPool: string,
    hTokenOut: BigNumberish,
    maxUnderlyingIn: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHTokenAndAddLiquidity(
    hifiPool: string,
    hTokenOut: BigNumberish,
    maxUnderlyingAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHTokenAndAddLiquidityWithSignature(
    hifiPool: string,
    hTokenOut: BigNumberish,
    maxUnderlyingAmount: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHTokenAndRepayBorrow(
    hifiPool: string,
    balanceSheet: string,
    maxUnderlyingIn: BigNumberish,
    hTokenOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHTokenAndRepayBorrowWithSignature(
    hifiPool: string,
    balanceSheet: string,
    maxUnderlyingIn: BigNumberish,
    hTokenOut: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyHTokenWithSignature(
    hifiPool: string,
    hTokenOut: BigNumberish,
    maxUnderlyingIn: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyUnderlying(
    hifiPool: string,
    underlyingOut: BigNumberish,
    maxHTokenIn: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyUnderlyingAndAddLiquidity(
    hifiPool: string,
    maxHTokenAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyUnderlyingAndAddLiquidityWithSignature(
    hifiPool: string,
    maxHTokenAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  buyUnderlyingWithSignature(
    hifiPool: string,
    underlyingOut: BigNumberish,
    maxHTokenIn: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateral(
    balanceSheet: string,
    collateral: string,
    depositAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHToken(
    balanceSheet: string,
    collateral: string,
    hToken: string,
    depositAmount: BigNumberish,
    borrowAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHTokenAndAddLiquidity(
    balanceSheet: string,
    collateral: string,
    hifiPool: string,
    depositAmount: BigNumberish,
    maxBorrowAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(
    balanceSheet: string,
    collateral: string,
    hifiPool: string,
    depositAmount: BigNumberish,
    maxBorrowAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    deadline: BigNumberish,
    signatureCollateral: BytesLike,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHTokenAndSellHToken(
    balanceSheet: string,
    collateral: string,
    hifiPool: string,
    depositAmount: BigNumberish,
    borrowAmount: BigNumberish,
    minUnderlyingOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(
    balanceSheet: string,
    collateral: string,
    hifiPool: string,
    depositAmount: BigNumberish,
    borrowAmount: BigNumberish,
    minUnderlyingOut: BigNumberish,
    deadline: BigNumberish,
    signatureCollateral: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralAndBorrowHTokenWithSignature(
    balanceSheet: string,
    collateral: string,
    hToken: string,
    depositAmount: BigNumberish,
    borrowAmount: BigNumberish,
    deadline: BigNumberish,
    signatureCollateral: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositCollateralWithSignature(
    balanceSheet: string,
    collateral: string,
    depositAmount: BigNumberish,
    deadline: BigNumberish,
    signatureCollateral: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlying(
    hToken: string,
    underlyingAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlyingAndMintHTokenAndAddLiquidity(
    hifiPool: string,
    depositAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(
    hifiPool: string,
    depositAmount: BigNumberish,
    underlyingOffered: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlyingAndRepayBorrow(
    hToken: string,
    balanceSheet: string,
    underlyingAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlyingAndRepayBorrowWithSignature(
    hToken: string,
    balanceSheet: string,
    underlyingAmount: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  depositUnderlyingWithSignature(
    hToken: string,
    underlyingAmount: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  redeem(
    hToken: string,
    hTokenAmount: BigNumberish,
    underlyingAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  redeemWithSignature(
    hToken: string,
    hTokenAmount: BigNumberish,
    underlyingAmount: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidity(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndRedeem(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndRedeemWithSignature(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    deadline: BigNumberish,
    signatureLPToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndSellHToken(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    minUnderlyingOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndSellHTokenWithSignature(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    minUnderlyingOut: BigNumberish,
    deadline: BigNumberish,
    signatureLPToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndWithdrawUnderlying(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    withdrawAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityAndWithdrawUnderlyingWithSignature(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    withdrawAmount: BigNumberish,
    deadline: BigNumberish,
    signatureLPToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityWithSignature(
    hifiPool: string,
    poolTokensBurned: BigNumberish,
    deadline: BigNumberish,
    signatureLPToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  repayBorrow(
    balanceSheet: string,
    hToken: string,
    repayAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  repayBorrowWithSignature(
    balanceSheet: string,
    hToken: string,
    repayAmount: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellHToken(
    hifiPool: string,
    hTokenIn: BigNumberish,
    minUnderlyingOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellHTokenWithSignature(
    hifiPool: string,
    hTokenIn: BigNumberish,
    minUnderlyingOut: BigNumberish,
    deadline: BigNumberish,
    signatureHToken: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellUnderlying(
    hifiPool: string,
    underlyingIn: BigNumberish,
    minHTokenOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellUnderlyingAndRepayBorrow(
    hifiPool: string,
    balanceSheet: string,
    underlyingIn: BigNumberish,
    minHTokenOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellUnderlyingAndRepayBorrowWithSignature(
    hifiPool: string,
    balanceSheet: string,
    underlyingIn: BigNumberish,
    minHTokenOut: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sellUnderlyingWithSignature(
    hifiPool: string,
    underlyingIn: BigNumberish,
    minHTokenOut: BigNumberish,
    deadline: BigNumberish,
    signatureUnderlying: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  withdrawCollateral(
    balanceSheet: string,
    collateral: string,
    withdrawAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  wrapEthAndDepositAndBorrowHTokenAndSellHToken(
    weth: string,
    balanceSheet: string,
    hifiPool: string,
    borrowAmount: BigNumberish,
    minUnderlyingOut: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  wrapEthAndDepositCollateral(
    weth: string,
    balanceSheet: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addLiquidity(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    addLiquidityWithSignature(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowHToken(
      balanceSheet: string,
      hToken: string,
      borrowAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowHTokenAndAddLiquidity(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowHTokenAndBuyUnderlying(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowHTokenAndSellHToken(
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHToken(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHTokenAndAddLiquidity(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHTokenAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHTokenAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    buyHTokenWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    buyUnderlying(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyUnderlyingAndAddLiquidity(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    buyUnderlyingAndAddLiquidityWithSignature(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    buyUnderlyingWithSignature(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateral(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHToken(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHTokenAndAddLiquidity(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHTokenAndSellHToken(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralAndBorrowHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositCollateralWithSignature(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlying(
      hToken: string,
      underlyingAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlyingAndMintHTokenAndAddLiquidity(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlyingAndRepayBorrow(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlyingAndRepayBorrowWithSignature(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    depositUnderlyingWithSignature(
      hToken: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    redeem(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemWithSignature(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidity(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndRedeem(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndRedeemWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndSellHToken(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndSellHTokenWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndWithdrawUnderlying(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityAndWithdrawUnderlyingWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    removeLiquidityWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    repayBorrow(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    repayBorrowWithSignature(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    sellHToken(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    sellHTokenWithSignature(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    sellUnderlying(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    sellUnderlyingAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    sellUnderlyingAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    sellUnderlyingWithSignature(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawCollateral(
      balanceSheet: string,
      collateral: string,
      withdrawAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    wrapEthAndDepositAndBorrowHTokenAndSellHToken(
      weth: string,
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    wrapEthAndDepositCollateral(
      weth: string,
      balanceSheet: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "BorrowHTokenAndBuyUnderlying(address,uint256,uint256)"(
      borrower?: string | null,
      borrowAmount?: null,
      underlyingAmount?: null
    ): BorrowHTokenAndBuyUnderlyingEventFilter;
    BorrowHTokenAndBuyUnderlying(
      borrower?: string | null,
      borrowAmount?: null,
      underlyingAmount?: null
    ): BorrowHTokenAndBuyUnderlyingEventFilter;

    "BorrowHTokenAndSellHToken(address,uint256,uint256)"(
      borrower?: string | null,
      borrowAmount?: null,
      underlyingAmount?: null
    ): BorrowHTokenAndSellHTokenEventFilter;
    BorrowHTokenAndSellHToken(
      borrower?: string | null,
      borrowAmount?: null,
      underlyingAmount?: null
    ): BorrowHTokenAndSellHTokenEventFilter;
  };

  estimateGas: {
    addLiquidity(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addLiquidityWithSignature(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowHToken(
      balanceSheet: string,
      hToken: string,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowHTokenAndAddLiquidity(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowHTokenAndBuyUnderlying(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowHTokenAndSellHToken(
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHToken(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHTokenAndAddLiquidity(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHTokenAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHTokenAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyHTokenWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyUnderlying(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyUnderlyingAndAddLiquidity(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyUnderlyingAndAddLiquidityWithSignature(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    buyUnderlyingWithSignature(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateral(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHToken(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHTokenAndAddLiquidity(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHTokenAndSellHToken(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralAndBorrowHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositCollateralWithSignature(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlying(
      hToken: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlyingAndMintHTokenAndAddLiquidity(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlyingAndRepayBorrow(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlyingAndRepayBorrowWithSignature(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    depositUnderlyingWithSignature(
      hToken: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    redeem(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    redeemWithSignature(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidity(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndRedeem(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndRedeemWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndSellHToken(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndSellHTokenWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndWithdrawUnderlying(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityAndWithdrawUnderlyingWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeLiquidityWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    repayBorrow(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    repayBorrowWithSignature(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellHToken(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellHTokenWithSignature(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellUnderlying(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellUnderlyingAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellUnderlyingAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sellUnderlyingWithSignature(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    withdrawCollateral(
      balanceSheet: string,
      collateral: string,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    wrapEthAndDepositAndBorrowHTokenAndSellHToken(
      weth: string,
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    wrapEthAndDepositCollateral(
      weth: string,
      balanceSheet: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addLiquidity(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addLiquidityWithSignature(
      hifiPool: string,
      underlyingOffered: BigNumberish,
      maxHTokenRequired: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowHToken(
      balanceSheet: string,
      hToken: string,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowHTokenAndAddLiquidity(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowHTokenAndBuyUnderlying(
      balanceSheet: string,
      hifiPool: string,
      maxBorrowAmount: BigNumberish,
      underlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowHTokenAndSellHToken(
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHToken(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHTokenAndAddLiquidity(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHTokenAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHTokenAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      maxUnderlyingIn: BigNumberish,
      hTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyHTokenWithSignature(
      hifiPool: string,
      hTokenOut: BigNumberish,
      maxUnderlyingIn: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyUnderlying(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyUnderlyingAndAddLiquidity(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyUnderlyingAndAddLiquidityWithSignature(
      hifiPool: string,
      maxHTokenAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    buyUnderlyingWithSignature(
      hifiPool: string,
      underlyingOut: BigNumberish,
      maxHTokenIn: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateral(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHToken(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHTokenAndAddLiquidity(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHTokenAndAddLiquidityWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      maxBorrowAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHTokenAndSellHToken(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHTokenAndSellHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hifiPool: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralAndBorrowHTokenWithSignature(
      balanceSheet: string,
      collateral: string,
      hToken: string,
      depositAmount: BigNumberish,
      borrowAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositCollateralWithSignature(
      balanceSheet: string,
      collateral: string,
      depositAmount: BigNumberish,
      deadline: BigNumberish,
      signatureCollateral: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlying(
      hToken: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlyingAndMintHTokenAndAddLiquidity(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlyingAndMintHTokenAndAddLiquidityWithSignature(
      hifiPool: string,
      depositAmount: BigNumberish,
      underlyingOffered: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlyingAndRepayBorrow(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlyingAndRepayBorrowWithSignature(
      hToken: string,
      balanceSheet: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    depositUnderlyingWithSignature(
      hToken: string,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    redeem(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    redeemWithSignature(
      hToken: string,
      hTokenAmount: BigNumberish,
      underlyingAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidity(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndRedeem(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndRedeemWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndSellHToken(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndSellHTokenWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndWithdrawUnderlying(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityAndWithdrawUnderlyingWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      withdrawAmount: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityWithSignature(
      hifiPool: string,
      poolTokensBurned: BigNumberish,
      deadline: BigNumberish,
      signatureLPToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    repayBorrow(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    repayBorrowWithSignature(
      balanceSheet: string,
      hToken: string,
      repayAmount: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellHToken(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellHTokenWithSignature(
      hifiPool: string,
      hTokenIn: BigNumberish,
      minUnderlyingOut: BigNumberish,
      deadline: BigNumberish,
      signatureHToken: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellUnderlying(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellUnderlyingAndRepayBorrow(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellUnderlyingAndRepayBorrowWithSignature(
      hifiPool: string,
      balanceSheet: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sellUnderlyingWithSignature(
      hifiPool: string,
      underlyingIn: BigNumberish,
      minHTokenOut: BigNumberish,
      deadline: BigNumberish,
      signatureUnderlying: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    withdrawCollateral(
      balanceSheet: string,
      collateral: string,
      withdrawAmount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    wrapEthAndDepositAndBorrowHTokenAndSellHToken(
      weth: string,
      balanceSheet: string,
      hifiPool: string,
      borrowAmount: BigNumberish,
      minUnderlyingOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    wrapEthAndDepositCollateral(
      weth: string,
      balanceSheet: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
