/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PoolInitializer,
  PoolInitializerInterface,
} from "../../../../../@uniswap/v3-periphery/contracts/base/PoolInitializer";

const _abi = [
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createAndInitializePoolIfNecessary",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class PoolInitializer__factory {
  static readonly abi = _abi;
  static createInterface(): PoolInitializerInterface {
    return new Interface(_abi) as PoolInitializerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PoolInitializer {
    return new Contract(address, _abi, runner) as unknown as PoolInitializer;
  }
}
