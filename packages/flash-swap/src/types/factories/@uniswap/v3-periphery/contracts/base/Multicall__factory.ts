/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Multicall,
  MulticallInterface,
} from "../../../../../@uniswap/v3-periphery/contracts/base/Multicall";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class Multicall__factory {
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new Interface(_abi) as MulticallInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multicall {
    return new Contract(address, _abi, runner) as unknown as Multicall;
  }
}
