/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FlashUniswapV3,
  FlashUniswapV3Interface,
} from "../../../contracts/uniswap-v3/FlashUniswapV3";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "balanceSheet_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniV3Factory_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniV3Quoter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniV3SwapRouter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__CallNotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__LiquidateUnderlyingBackedVault",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "turnout",
        type: "int256",
      },
    ],
    name: "FlashUniswapV3__TurnoutNotSatisfied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__UnderlyingNotInPool",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeErc20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeErc20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bond",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subsidyAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profitAmount",
        type: "uint256",
      },
    ],
    name: "FlashLoanAndLiquidateBorrow",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceSheet",
    outputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "contract IHToken",
            name: "bond",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateral",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "int256",
            name: "turnout",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "underlyingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFlashUniswapV3.FlashLiquidateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "flashLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3Quoter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3SwapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3FlashCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001a4838038062001a48833981016040819052620000359162000071565b6001600160a01b0393841660805291831660a052821660c0521660e052620000d9565b6001600160a01b03811681146200006e57600080fd5b50565b600080600080608085870312156200008857600080fd5b8451620000958162000058565b6020860151909450620000a88162000058565b6040860151909350620000bb8162000058565b6060860151909250620000ce8162000058565b939692955090935050565b60805160a05160c05160e051611900620001486000396000818160bf01528181610656015261079201526000818161012201526104e101526000818160fb015261098d015260008181607c01528181610c8001528181610d1f01528181610db70152610eef01526119006000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063705e474b11610050578063705e474b146100f6578063795674ff1461011d578063e9cbafb01461014457600080fd5b806322285cf6146100775780633325a4d8146100ba5780635fd3acc2146100e1575b600080fd5b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6100f46100ef366004611403565b610157565b005b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b61009e7f000000000000000000000000000000000000000000000000000000000000000081565b6100f46101523660046114ab565b610389565b61015f61132f565b81602001516001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c5919061152b565b6001600160a01b03908116606083018190526040840151909116141561021d57815160608201516040516356c284cb60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6102348260400151826060015184606001516108d9565b60408201819052606082015160a0840151610250929190610950565b60208301528152604081015161026590610986565b6001600160a01b031663490e6cbc3083600001518460200151604051806101400160405280876000015181526020018760200151815260200188602001516001600160a01b0316815260200188600001516001600160a01b0316815260200188604001516001600160a01b0316815260200187604001518152602001336001600160a01b031681526020018860800151815260200187606001516001600160a01b031681526020018860a001518152506040516020016103259190611548565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016103539493929190611695565b600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b505050505050565b6103c26040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006103d08385018561174e565b90506103df8160a00151610986565b6001600160a01b0316336001600160a01b03161461041257604051639b2d751d60e01b8152336004820152602401610214565b61042581604001518261012001516109b8565b80835260608201516040830151608084015161044093610c54565b606083015261010081015160a0820151516001600160a01b03908116911614610478578481602001516104739190611818565b610485565b8051610485908790611818565b6040838101829052608083015161010084015160a085015183015192516330d07f2160e01b81526001600160a01b039283166004820152908216602482015262ffffff90921660448301526064820192909252600060848201527f0000000000000000000000000000000000000000000000000000000000000000909116906330d07f219060a4016020604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190611830565b6080830181905260e082015161056591611849565b826060015112156105a9576060820151608083015160e0830151604051636d0db81160e01b8152600481019390935260248301919091526044820152606401610214565b8160600151826080015111156105f45760608201516080808401519190910360a0840181905260c0830151918301516105ef926001600160a01b03909116913090610fcb565b610635565b816080015182606001511115610635576080808301516060840151036020840181905260c083015191830151610635926001600160a01b0390911691611069565b6080818101519083015160405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482019290925291169063095ea7b3906044016020604051808303816000875af11580156106af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d391906118a2565b506040805161010080820183526080848101516001600160a01b0390811684529185015182166020840190815260a08087015186015162ffffff9081168688019081523060608801908152428689019081528b8a0151948901948552958b015160c08901908152600060e08a019081529951631b67c43360e31b81529851881660048a015294518716602489015290519091166044870152518416606486015291516084850152905160a48401525160c48301529151821660e48201527f00000000000000000000000000000000000000000000000000000000000000009091169063db3e219890610104016020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611830565b5061082a3383604001518361010001516001600160a01b03166110699092919063ffffffff16565b80604001516001600160a01b031681606001516001600160a01b03168260c001516001600160a01b03167f8ec94409dfce94fc16bfa5539b183b89a1e0bedd44755627dc592b5296c6f9078461012001518660600151876080015188604001518960a001518a602001516040516108c996959493929190958652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a4505050505050565b6040805160608101825260008082526020820181905291810191909152826001600160a01b0316846001600160a01b03161115610914579192915b6040518060600160405280856001600160a01b03168152602001846001600160a01b031681526020018362ffffff1681525090505b9392505050565b60008084600001516001600160a01b0316846001600160a01b0316146109785750818061097d565b829150815b50935093915050565b60006109b27f00000000000000000000000000000000000000000000000000000000000000008361109e565b92915050565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1d919061152b565b604051636eb1769f60e11b81523060048201526001600160a01b03868116602483015291925060009183169063dd62ed3e90604401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a939190611830565b905083811015610b135760405163095ea7b360e01b81526001600160a01b038681166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1191906118a2565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611830565b60405163b9f5be4160e01b8152600481018790529091506001600160a01b0387169063b9f5be4190602401600060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03891691506370a0823190602401602060405180830381865afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c469190611830565b919091039695505050505050565b604051630f20729d60e11b81526001600160a01b038581166004830152838116602483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690631e40e53a90604401602060405180830381865afa158015610cc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ceb9190611830565b60405163f37765c760e01b81526001600160a01b0386811660048301526024820183905287811660448301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f37765c790606401602060405180830381865afa158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a9190611830565b604051634d7c892f60e01b81526001600160a01b03898116600483015288811660248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690634d7c892f90604401602060405180830381865afa158015610dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e229190611830565b90506000818311610e335782610e35565b815b90506000818711610e465786610e48565b815b6040516370a0823160e01b81523060048201529091506000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190611830565b604051630c9fae0f60e31b81526001600160a01b038d811660048301528c81166024830152604482018590528b811660648301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906364fd707890608401600060405180830381600087803b158015610f3557600080fd5b505af1158015610f49573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b038c1691506370a0823190602401602060405180830381865afa158015610f94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190611830565b919091039b9a5050505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526110639085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261119f565b50505050565b6040516001600160a01b03831660248201526044810182905261109990849063a9059cbb60e01b90606401610fff565b505050565b600081602001516001600160a01b031682600001516001600160a01b0316106110c657600080fd5b815160208084015160408086015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401529085901b6bffffffffffffffffffffffff191660a183015260b58201527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d582015260f50160408051601f1981840301815291905280516020909101209392505050565b60006111e183836040518060400160405280601581526020017f5361666545726332304c6f774c6576656c43616c6c000000000000000000000081525061121c565b80519091501561109957808060200190518101906111ff91906118a2565b611099576040516364d6fc4d60e01b815260040160405180910390fd5b6060611230846001600160a01b03166112f3565b61125857604051638201cc0560e01b81526001600160a01b0385166004820152602401610214565b600080856001600160a01b03168560405161127391906118c4565b6000604051808303816000865af19150503d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b509150915081156112c95791506109499050565b8051156112d95780518082602001fd5b8360405162461bcd60e51b815260040161021491906118e0565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061132757508115155b949350505050565b60405180608001604052806000815260200160008152602001611383604051806060016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600062ffffff1681525090565b8152600060209091015290565b604051610140810167ffffffffffffffff811182821017156113c257634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146113dd57600080fd5b50565b80356113eb816113c8565b919050565b803562ffffff811681146113eb57600080fd5b600060c0828403121561141557600080fd5b60405160c0810181811067ffffffffffffffff8211171561144657634e487b7160e01b600052604160045260246000fd5b6040528235611454816113c8565b81526020830135611464816113c8565b60208201526040830135611477816113c8565b6040820152611488606084016113f0565b60608201526080830135608082015260a083013560a08201528091505092915050565b600080600080606085870312156114c157600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156114e757600080fd5b818701915087601f8301126114fb57600080fd5b81358181111561150a57600080fd5b88602082850101111561151c57600080fd5b95989497505060200194505050565b60006020828403121561153d57600080fd5b8151610949816113c8565b6000610180820190508251825260208301516020830152604083015161157960408401826001600160a01b03169052565b50606083015161159460608401826001600160a01b03169052565b5060808301516115af60808401826001600160a01b03169052565b5060a08301516115eb60a08401826001600160a01b038082511683528060208301511660208401525062ffffff60408201511660408301525050565b5060c0830151610100611608818501836001600160a01b03169052565b60e085015161012085810191909152908501516001600160a01b03166101408501529093015161016090920191909152919050565b60005b83811015611658578181015183820152602001611640565b838111156110635750506000910152565b6000815180845261168181602086016020860161163d565b601f01601f19169290920160200192915050565b6001600160a01b03851681528360208201528260408201526080606082015260006116c36080830184611669565b9695505050505050565b6000606082840312156116df57600080fd5b6040516060810181811067ffffffffffffffff8211171561171057634e487b7160e01b600052604160045260246000fd5b6040529050808235611721816113c8565b81526020830135611731816113c8565b6020820152611742604084016113f0565b60408201525092915050565b6000610180828403121561176157600080fd5b611769611390565b8235815260208301356020820152611783604084016113e0565b6040820152611794606084016113e0565b60608201526117a5608084016113e0565b60808201526117b78460a085016116cd565b60a08201526101006117ca8185016113e0565b60c08301526101208085013560e08401526117e861014086016113e0565b828401526101608501358184015250508091505092915050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561182b5761182b611802565b500190565b60006020828403121561184257600080fd5b5051919050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561188357611883611802565b600160ff1b839003841281161561189c5761189c611802565b50500190565b6000602082840312156118b457600080fd5b8151801515811461094957600080fd5b600082516118d681846020870161163d565b9190910192915050565b602081526000610949602083018461166956fea164736f6c634300080c000a";

type FlashUniswapV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashUniswapV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashUniswapV3__factory extends ContractFactory {
  constructor(...args: FlashUniswapV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    balanceSheet_: string,
    uniV3Factory_: string,
    uniV3Quoter_: string,
    uniV3SwapRouter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlashUniswapV3> {
    return super.deploy(
      balanceSheet_,
      uniV3Factory_,
      uniV3Quoter_,
      uniV3SwapRouter_,
      overrides || {}
    ) as Promise<FlashUniswapV3>;
  }
  override getDeployTransaction(
    balanceSheet_: string,
    uniV3Factory_: string,
    uniV3Quoter_: string,
    uniV3SwapRouter_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      balanceSheet_,
      uniV3Factory_,
      uniV3Quoter_,
      uniV3SwapRouter_,
      overrides || {}
    );
  }
  override attach(address: string): FlashUniswapV3 {
    return super.attach(address) as FlashUniswapV3;
  }
  override connect(signer: Signer): FlashUniswapV3__factory {
    return super.connect(signer) as FlashUniswapV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashUniswapV3Interface {
    return new utils.Interface(_abi) as FlashUniswapV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashUniswapV3 {
    return new Contract(address, _abi, signerOrProvider) as FlashUniswapV3;
  }
}
