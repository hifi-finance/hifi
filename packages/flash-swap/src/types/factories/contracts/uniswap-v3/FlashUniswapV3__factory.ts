/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FlashUniswapV3,
  FlashUniswapV3Interface,
} from "../../../contracts/uniswap-v3/FlashUniswapV3";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "balanceSheet_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniV3Factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__CallNotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__LiquidateUnderlyingBackedVault",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "turnout",
        type: "int256",
      },
    ],
    name: "FlashUniswapV3__TurnoutNotSatisfied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeErc20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeErc20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bond",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subsidyAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profitAmount",
        type: "uint256",
      },
    ],
    name: "FlashSwapAndLiquidateBorrow",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceSheet",
    outputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "contract IHToken",
            name: "bond",
            type: "address",
          },
          {
            internalType: "contract IErc20",
            name: "collateral",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
          {
            internalType: "int256",
            name: "turnout",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "underlyingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFlashUniswapV3.FlashLiquidateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "flashLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051620016783803806200167883398101604081905261003191610060565b6001600160a01b039182166080521660a05261009a565b6001600160a01b038116811461005d57600080fd5b50565b6000806040838503121561007357600080fd5b825161007e81610048565b602084015190925061008f81610048565b809150509250929050565b60805160a051611597620000e16000396000818160ae015261064a01526000818160560152818161093d015281816109dc01528181610a740152610bac01526115976000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806322285cf6146100515780635fd3acc214610094578063705e474b146100a9578063fa461e33146100d0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100a76100a2366004611021565b6100e3565b005b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100a76100de3660046110c9565b61034b565b6040805160c0810182526000606082018181526080830182905260a083018290528252602082018190529181019190915281602001516001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610156573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017a9190611149565b6001600160a01b0390811660208301819052604084015190911614156101d257815160208201516040516356c284cb60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6101e98260400151826020015184606001516105cc565b808252602080820151908301516001600160a01b03908116911614604083015261021290610643565b6001600160a01b031663128acb083083604001518560a00151600019610238919061117c565b856040015161026557610260600173fffd8963efd1fc6a506488495d951d5263988d26611203565b610275565b6102756401000276a3600161122b565b6040805160e0810182526020808b01516001600160a01b0390811683528b518116828401528b840151168284015289516060830152336080808401919091528b015160a0808401919091528b015160c083015291516102d49201611256565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161030395949392919061133d565b60408051808303816000875af1158015610321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103459190611382565b50505050565b61037d6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600061038b83850185611427565b905061039a8160600151610643565b6001600160a01b0316336001600160a01b0316146103cd57604051639b2d751d60e01b81523360048201526024016101c9565b6103df81600001518260c00151610675565b8083526020820151825160408401516103f793610911565b60608301526000861361040a578461040c565b855b6040830181905260a0820151610421916114e0565b8260600151121561046257606082015160408084015160a08401519151636d0db81160e01b81526004810193909352602483015260448201526064016101c9565b8160600151826040015111156104ac576060820151604080840151919091036080808501829052830151918301516104a7926001600160a01b03909116913090610c88565b6104ed565b8160400151826060015111156104ed57604080830151606084015103602084018190526080830151918301516104ed926001600160a01b0390911691610d20565b61051333836040015183604001516001600160a01b0316610d209092919063ffffffff16565b80600001516001600160a01b031681602001516001600160a01b031682608001516001600160a01b03167f612c4a3d511ecc6d0a51d965cc76c7ed6a97215ac56d9a290c17c501ac7c643684604001518560c001518760600151886040015189608001518a602001516040516105bc969594939291906001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a4505050505050565b6040805160608101825260008082526020820181905291810191909152826001600160a01b0316846001600160a01b03161115610607579192915b6040518060600160405280856001600160a01b03168152602001846001600160a01b031681526020018362ffffff1681525090505b9392505050565b600061066f7f000000000000000000000000000000000000000000000000000000000000000083610d55565b92915050565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da9190611149565b604051636eb1769f60e11b81523060048201526001600160a01b03868116602483015291925060009183169063dd62ed3e90604401602060405180830381865afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611520565b9050838110156107d05760405163095ea7b360e01b81526001600160a01b038681166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af11580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce9190611539565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611520565b60405163b9f5be4160e01b8152600481018790529091506001600160a01b0387169063b9f5be4190602401600060405180830381600087803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03891691506370a0823190602401602060405180830381865afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109039190611520565b919091039695505050505050565b604051630f20729d60e11b81526001600160a01b038581166004830152838116602483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690631e40e53a90604401602060405180830381865afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190611520565b60405163f37765c760e01b81526001600160a01b0386811660048301526024820183905287811660448301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f37765c790606401602060405180830381865afa158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190611520565b604051634d7c892f60e01b81526001600160a01b03898116600483015288811660248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690634d7c892f90604401602060405180830381865afa158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf9190611520565b90506000818311610af05782610af2565b815b90506000818711610b035786610b05565b815b6040516370a0823160e01b81523060048201529091506000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190611520565b604051630c9fae0f60e31b81526001600160a01b038d811660048301528c81166024830152604482018590528b811660648301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906364fd707890608401600060405180830381600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b038c1691506370a0823190602401602060405180830381865afa158015610c51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c759190611520565b919091039b9a5050505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526103459085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e56565b6040516001600160a01b038316602482015260448101829052610d5090849063a9059cbb60e01b90606401610cbc565b505050565b600081602001516001600160a01b031682600001516001600160a01b031610610d7d57600080fd5b815160208084015160408086015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401529085901b6bffffffffffffffffffffffff191660a183015260b58201527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d582015260f50160408051601f1981840301815291905280516020909101209392505050565b6000610e9883836040518060400160405280601581526020017f5361666545726332304c6f774c6576656c43616c6c0000000000000000000000815250610ed3565b805190915015610d505780806020019051810190610eb69190611539565b610d50576040516364d6fc4d60e01b815260040160405180910390fd5b6060610ee7846001600160a01b0316610faa565b610f0f57604051638201cc0560e01b81526001600160a01b03851660048201526024016101c9565b600080856001600160a01b031685604051610f2a919061155b565b6000604051808303816000865af19150503d8060008114610f67576040519150601f19603f3d011682016040523d82523d6000602084013e610f6c565b606091505b50915091508115610f8057915061063c9050565b805115610f905780518082602001fd5b8360405162461bcd60e51b81526004016101c99190611577565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610fde57508115155b949350505050565b6001600160a01b0381168114610ffb57600080fd5b50565b803561100981610fe6565b919050565b803562ffffff8116811461100957600080fd5b600060c0828403121561103357600080fd5b60405160c0810181811067ffffffffffffffff8211171561106457634e487b7160e01b600052604160045260246000fd5b604052823561107281610fe6565b8152602083013561108281610fe6565b6020820152604083013561109581610fe6565b60408201526110a66060840161100e565b60608201526080830135608082015260a083013560a08201528091505092915050565b600080600080606085870312156110df57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561110557600080fd5b818701915087601f83011261111957600080fd5b81358181111561112857600080fd5b88602082850101111561113a57600080fd5b95989497505060200194505050565b60006020828403121561115b57600080fd5b815161063c81610fe6565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b036000841360008413858304851182821616156111a4576111a4611166565b600160ff1b60008712828116878305891216156111c3576111c3611166565b600087129250878205871284841616156111df576111df611166565b878505871281841616156111f5576111f5611166565b505050929093029392505050565b60006001600160a01b038381169083168181101561122357611223611166565b039392505050565b60006001600160a01b0380831681851680830382111561124d5761124d611166565b01949350505050565b6000610120820190506001600160a01b03808451168352806020850151166020840152806040850151166040840152606084015181815116606085015281602082015116608085015262ffffff60408201511660a0850152505060808301516112ca60c08401826001600160a01b03169052565b5060a083015160e083015260c0909201516101009091015290565b60005b838110156113005781810151838201526020016112e8565b838111156103455750506000910152565b600081518084526113298160208601602086016112e5565b601f01601f19169290920160200192915050565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a0608083015261137760a0830184611311565b979650505050505050565b6000806040838503121561139557600080fd5b505080516020909101519092909150565b6000606082840312156113b857600080fd5b6040516060810181811067ffffffffffffffff821117156113e957634e487b7160e01b600052604160045260246000fd5b60405290508082356113fa81610fe6565b8152602083013561140a81610fe6565b602082015261141b6040840161100e565b60408201525092915050565b6000610120828403121561143a57600080fd5b60405160e0810181811067ffffffffffffffff8211171561146b57634e487b7160e01b600052604160045260246000fd5b604052823561147981610fe6565b8152602083013561148981610fe6565b6020820152604083013561149c81610fe6565b60408201526114ae84606085016113a6565b60608201526114bf60c08401610ffe565b608082015260e083013560a08201526101009092013560c083015250919050565b6000808212826001600160ff1b030384138115161561150157611501611166565b600160ff1b839003841281161561151a5761151a611166565b50500190565b60006020828403121561153257600080fd5b5051919050565b60006020828403121561154b57600080fd5b8151801515811461063c57600080fd5b6000825161156d8184602087016112e5565b9190910192915050565b60208152600061063c602083018461131156fea164736f6c634300080c000a";

type FlashUniswapV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashUniswapV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashUniswapV3__factory extends ContractFactory {
  constructor(...args: FlashUniswapV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    balanceSheet_: string,
    uniV3Factory_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlashUniswapV3> {
    return super.deploy(
      balanceSheet_,
      uniV3Factory_,
      overrides || {}
    ) as Promise<FlashUniswapV3>;
  }
  override getDeployTransaction(
    balanceSheet_: string,
    uniV3Factory_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      balanceSheet_,
      uniV3Factory_,
      overrides || {}
    );
  }
  override attach(address: string): FlashUniswapV3 {
    return super.attach(address) as FlashUniswapV3;
  }
  override connect(signer: Signer): FlashUniswapV3__factory {
    return super.connect(signer) as FlashUniswapV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashUniswapV3Interface {
    return new utils.Interface(_abi) as FlashUniswapV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashUniswapV3 {
    return new Contract(address, _abi, signerOrProvider) as FlashUniswapV3;
  }
}
