/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FlashUniswapV3,
  FlashUniswapV3Interface,
} from "../../../contracts/uniswap-v3/FlashUniswapV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "balanceSheet_",
        type: "address",
      },
      {
        internalType: "address",
        name: "uniV3Factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__CallNotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutExpected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutReceived",
        type: "uint256",
      },
    ],
    name: "FlashUniswapV3__InsufficientSwapOutputAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "FlashUniswapV3__LiquidateUnderlyingBackedVault",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "turnout",
        type: "int256",
      },
    ],
    name: "FlashUniswapV3__TurnoutNotSatisfied",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeErc20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeErc20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bond",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seizeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subsidyAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "profitAmount",
        type: "uint256",
      },
    ],
    name: "FlashLiquidate",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceSheet",
    outputs: [
      {
        internalType: "contract IBalanceSheetV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "contract IHToken",
            name: "bond",
            type: "address",
          },
          {
            internalType: "contract IErc20",
            name: "collateral",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "int256",
            name: "turnout",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "underlyingAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFlashUniswapV3.FlashLiquidateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "flashLiquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001b6438038062001b64833981016040819052620000349162000065565b6001600160a01b039182166080521660a052620000a4565b6001600160a01b03811681146200006257600080fd5b50565b600080604083850312156200007957600080fd5b825162000086816200004c565b602084015190925062000099816200004c565b809150509250929050565b60805160a051611a79620000eb6000396000818160ae0152610828015260008181605601528181610be601528181610c8501528181610d1d0152610e550152611a796000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806322285cf6146100515780633c21077e14610094578063705e474b146100a9578063fa461e33146100d0575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100a76100a236600461159b565b6100e3565b005b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100a76100de366004611658565b61022b565b60408051602081019091526000815281602001516001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610134573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015891906116d8565b6001600160a01b03908116808352604084015190911614156101a957815181516040516356c284cb60e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6102268260a00151306040518060e0016040528086602001516001600160a01b0316815260200186600001516001600160a01b0316815260200186604001516001600160a01b0316815260200186606001518152602001336001600160a01b03168152602001866080015181526020018660a0015181525061054c565b505050565b61028a604051806101000160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600062ffffff16815260200160006001600160a01b031681525090565b6000610298838501856116f5565b90506102a7816060015161071b565b62ffffff1660c085018190526001600160a01b0391821660e086018190529290911660a085018190526102da9291610757565b6001600160a01b0316336001600160a01b03161461030d57604051639b2d751d60e01b81523360048201526024016101a0565b6000861361031b578461031d565b855b60408301526060810151610330906108ad565b1561035d5761034281606001516108e7565b6060820152604082015161035790338361054c565b50610544565b61036f81600001518260c0015161091e565b80835260208201518251604084015161038793610bba565b606083015260a081015160408301516103a091906117d3565b826060015112156103e157606082015160408084015160a08401519151636d0db81160e01b81526004810193909352602483015260448201526064016101a0565b81606001518260400151111561042b57606082015160408084015191909103608080850182905283015191830151610426926001600160a01b03909116913090610f31565b61046c565b81604001518260600151111561046c576040808301516060840151036020840181905260808301519183015161046c926001600160a01b0390911691610fcf565b61049233836040015183604001516001600160a01b0316610fcf9092919063ffffffff16565b80600001516001600160a01b031681602001516001600160a01b031682608001516001600160a01b03167f8e4c31c4deff218c705ee01f5c23123c4864d19b598eabe8c6d3e9768ae983ef84604001518560c001518760600151886040015189608001518a6020015160405161053b969594939291906001600160a01b03969096168652602086019490945260408501929092526060840152608083015260a082015260c00190565b60405180910390a45b505050505050565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052610583836060015161071b565b62ffffff16602084018190526001600160a01b03918216604085018190529290911660608401819052808310608085015260009283926105c39290610757565b6001600160a01b031663128acb088785608001518a6105e19061182c565b876080015161060e57610609600173fffd8963efd1fc6a506488495d951d5263988d26611849565b61061e565b61061e6401000276a36001611871565b8a60405160200161062f91906118f4565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161065e95949392919061196a565b60408051808303816000875af115801561067c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a091906119af565b9150915082608001516106bc57806106b78361182c565b6106c6565b816106c68261182c565b80855290945087146107115782516040517fff454b820000000000000000000000000000000000000000000000000000000081526101a0918991600401918252602082015260400190565b5050509392505050565b600080806107298482610fff565b92506107368460146110cf565b905061074e610747600360146119d3565b8590610fff565b91509193909250565b6000826001600160a01b0316846001600160a01b03161115610777579192915b604080516060810182526001600160a01b038087168083529086166020830181905262ffffff8616938301939093529091116107b257600080fd5b805160208083015160408085015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201207fff0000000000000000000000000000000000000000000000000000000000000060a08401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff191660a183015260b58201527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b5460d582015260f50160408051601f19818403018152919052805160209091012095945050505050565b60006108bb600360146119d3565b60146108c86003826119d3565b6108d291906119d3565b6108dc91906119d3565b825110159050919050565b60606109186108f8600360146119d3565b610904600360146119d3565b845161091091906119eb565b84919061118f565b92915050565b600080836001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098391906116d8565b604051636eb1769f60e11b81523060048201526001600160a01b03868116602483015291925060009183169063dd62ed3e90604401602060405180830381865afa1580156109d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f99190611a02565b905083811015610a795760405163095ea7b360e01b81526001600160a01b038681166004830152600019602483015283169063095ea7b3906044016020604051808303816000875af1158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190611a1b565b505b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae49190611a02565b60405163b9f5be4160e01b8152600481018790529091506001600160a01b0387169063b9f5be4190602401600060405180830381600087803b158015610b2957600080fd5b505af1158015610b3d573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03891691506370a0823190602401602060405180830381865afa158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac9190611a02565b919091039695505050505050565b604051630f20729d60e11b81526001600160a01b038581166004830152838116602483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690631e40e53a90604401602060405180830381865afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c519190611a02565b60405163f37765c760e01b81526001600160a01b0386811660048301526024820183905287811660448301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063f37765c790606401602060405180830381865afa158015610ccc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf09190611a02565b604051634d7c892f60e01b81526001600160a01b03898116600483015288811660248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690634d7c892f90604401602060405180830381865afa158015610d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d889190611a02565b90506000818311610d995782610d9b565b815b90506000818711610dac5786610dae565b815b6040516370a0823160e01b81523060048201529091506000906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1c9190611a02565b604051630c9fae0f60e31b81526001600160a01b038d811660048301528c81166024830152604482018590528b811660648301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906364fd707890608401600060405180830381600087803b158015610e9b57600080fd5b505af1158015610eaf573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b038c1691506370a0823190602401602060405180830381865afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190611a02565b919091039b9a5050505050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fc99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526112f4565b50505050565b6040516001600160a01b03831660248201526044810182905261022690849063a9059cbb60e01b90606401610f65565b60008161100d8160146119d3565b101561105b5760405162461bcd60e51b815260206004820152601260248201527f746f416464726573735f6f766572666c6f77000000000000000000000000000060448201526064016101a0565b6110668260146119d3565b835110156110b65760405162461bcd60e51b815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e6473000000000000000000000060448201526064016101a0565b5001602001516c01000000000000000000000000900490565b6000816110dd8160036119d3565b101561112b5760405162461bcd60e51b815260206004820152601160248201527f746f55696e7432345f6f766572666c6f7700000000000000000000000000000060448201526064016101a0565b6111368260036119d3565b835110156111865760405162461bcd60e51b815260206004820152601460248201527f746f55696e7432345f6f75744f66426f756e647300000000000000000000000060448201526064016101a0565b50016003015190565b60608161119d81601f6119d3565b10156111dc5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016101a0565b826111e783826119d3565b10156112265760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016101a0565b61123082846119d3565b845110156112805760405162461bcd60e51b815260206004820152601160248201527f736c6963655f6f75744f66426f756e647300000000000000000000000000000060448201526064016101a0565b60608215801561129f57604051915060008252602082016040526112e9565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156112d85780518352602092830192016112c0565b5050858452601f01601f1916604052505b5090505b9392505050565b600061133683836040518060400160405280601581526020017f5361666545726332304c6f774c6576656c43616c6c0000000000000000000000815250611371565b80519091501561022657808060200190518101906113549190611a1b565b610226576040516364d6fc4d60e01b815260040160405180910390fd5b6060611385846001600160a01b0316611448565b6113ad57604051638201cc0560e01b81526001600160a01b03851660048201526024016101a0565b600080856001600160a01b0316856040516113c89190611a3d565b6000604051808303816000865af19150503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e61140a565b606091505b5091509150811561141e5791506112ed9050565b80511561142e5780518082602001fd5b8360405162461bcd60e51b81526004016101a09190611a59565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061147c57508115155b949350505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156114bd576114bd611484565b60405290565b60405160e0810167ffffffffffffffff811182821017156114bd576114bd611484565b6001600160a01b03811681146114fb57600080fd5b50565b8035611509816114e6565b919050565b600082601f83011261151f57600080fd5b813567ffffffffffffffff8082111561153a5761153a611484565b604051601f8301601f19908116603f0116810190828211818310171561156257611562611484565b8160405283815286602085880101111561157b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156115ad57600080fd5b813567ffffffffffffffff808211156115c557600080fd5b9083019060c082860312156115d957600080fd5b6115e161149a565b82356115ec816114e6565b815260208301356115fc816114e6565b6020820152604083013561160f816114e6565b604082015260608301358281111561162657600080fd5b6116328782860161150e565b6060830152506080830135608082015260a083013560a082015280935050505092915050565b6000806000806060858703121561166e57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561169457600080fd5b818701915087601f8301126116a857600080fd5b8135818111156116b757600080fd5b8860208285010111156116c957600080fd5b95989497505060200194505050565b6000602082840312156116ea57600080fd5b81516112ed816114e6565b60006020828403121561170757600080fd5b813567ffffffffffffffff8082111561171f57600080fd5b9083019060e0828603121561173357600080fd5b61173b6114c3565b611744836114fe565b8152611752602084016114fe565b6020820152611763604084016114fe565b604082015260608301358281111561177a57600080fd5b6117868782860161150e565b606083015250611798608084016114fe565b608082015260a083013560a082015260c083013560c082015280935050505092915050565b634e487b7160e01b600052601160045260246000fd5b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0384138115161561180d5761180d6117bd565b600160ff1b8390038412811615611826576118266117bd565b50500190565b6000600160ff1b821415611842576118426117bd565b5060000390565b60006001600160a01b0383811690831681811015611869576118696117bd565b039392505050565b60006001600160a01b03808316818516808303821115611893576118936117bd565b01949350505050565b60005b838110156118b757818101518382015260200161189f565b83811115610fc95750506000910152565b600081518084526118e081602086016020860161189c565b601f01601f19169290920160200192915050565b6020815260006001600160a01b03808451166020840152806020850151166040840152806040850151166060840152606084015160e0608085015261193d6101008501826118c8565b90508160808601511660a085015260a085015160c085015260c085015160e0850152809250505092915050565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a060808301526119a460a08301846118c8565b979650505050505050565b600080604083850312156119c257600080fd5b505080516020909101519092909150565b600082198211156119e6576119e66117bd565b500190565b6000828210156119fd576119fd6117bd565b500390565b600060208284031215611a1457600080fd5b5051919050565b600060208284031215611a2d57600080fd5b815180151581146112ed57600080fd5b60008251611a4f81846020870161189c565b9190910192915050565b6020815260006112ed60208301846118c856fea164736f6c634300080c000a";

type FlashUniswapV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashUniswapV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashUniswapV3__factory extends ContractFactory {
  constructor(...args: FlashUniswapV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    balanceSheet_: PromiseOrValue<string>,
    uniV3Factory_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashUniswapV3> {
    return super.deploy(
      balanceSheet_,
      uniV3Factory_,
      overrides || {}
    ) as Promise<FlashUniswapV3>;
  }
  override getDeployTransaction(
    balanceSheet_: PromiseOrValue<string>,
    uniV3Factory_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      balanceSheet_,
      uniV3Factory_,
      overrides || {}
    );
  }
  override attach(address: string): FlashUniswapV3 {
    return super.attach(address) as FlashUniswapV3;
  }
  override connect(signer: Signer): FlashUniswapV3__factory {
    return super.connect(signer) as FlashUniswapV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashUniswapV3Interface {
    return new utils.Interface(_abi) as FlashUniswapV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashUniswapV3 {
    return new Contract(address, _abi, signerOrProvider) as FlashUniswapV3;
  }
}
