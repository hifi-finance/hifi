/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Erc20Recover,
  Erc20RecoverInterface,
} from "../../../../../@prb/contracts/token/erc20/Erc20Recover";

const _abi = [
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NonRecoverableToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__OwnerZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "RecoverZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "SafeErc20__CallToNonContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeErc20__NoReturnData",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IErc20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "Recover",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IErc20[]",
        name: "nonRecoverableTokens",
        type: "address[]",
      },
    ],
    name: "SetNonRecoverableTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferOwnership",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "recoverAmount",
        type: "uint256",
      },
    ],
    name: "_recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "_setNonRecoverableTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonRecoverableTokens",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Erc20Recover__factory {
  static readonly abi = _abi;
  static createInterface(): Erc20RecoverInterface {
    return new Interface(_abi) as Erc20RecoverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Erc20Recover {
    return new Contract(address, _abi, runner) as unknown as Erc20Recover;
  }
}
