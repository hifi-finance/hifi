/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GodModeOwnableUpgradeable,
  GodModeOwnableUpgradeableInterface,
} from "../../../contracts/test/GodModeOwnableUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "OwnableUpgradeable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableUpgradeable__OwnerZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferOwnership",
    type: "event",
  },
  {
    inputs: [],
    name: "__godMode_Ownable_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610422806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b3f2889146100515780638da5cb5b1461005b578063d29d44ee14610090578063f35901df146100a3575b600080fd5b6100596100ab565b005b600054610074906201000090046001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61005961009e3660046103e5565b610159565b610059610241565b6000546201000090046001600160a01b031633146100fb57600054604051638276541360e01b8152620100009091046001600160a01b031660048201523360248201526044015b60405180910390fd5b60008054604051620100009091046001600160a01b0316907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908390a36000805475ffffffffffffffffffffffffffffffffffffffff000019169055565b6000546201000090046001600160a01b031633146101a457600054604051638276541360e01b8152620100009091046001600160a01b031660048201523360248201526044016100f2565b6001600160a01b0381166101cb57604051631a235c0f60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c91a3600080546001600160a01b03909216620100000275ffffffffffffffffffffffffffffffffffffffff000019909216919091179055565b600054610100900460ff1661025c5760005460ff1615610260565b303b155b6102d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016100f2565b600054610100900460ff161580156102f4576000805461ffff19166101011790555b6102fc610311565b801561030e576000805461ff00191690555b50565b600054610100900460ff1661038e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016100f2565b6000805475ffffffffffffffffffffffffffffffffffffffff00001916336201000081029190911782556040519091907f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c908290a3565b6000602082840312156103f757600080fd5b81356001600160a01b038116811461040e57600080fd5b939250505056fea164736f6c634300080c000a";

type GodModeOwnableUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GodModeOwnableUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GodModeOwnableUpgradeable__factory extends ContractFactory {
  constructor(...args: GodModeOwnableUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GodModeOwnableUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): GodModeOwnableUpgradeable__factory {
    return super.connect(runner) as GodModeOwnableUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GodModeOwnableUpgradeableInterface {
    return new Interface(_abi) as GodModeOwnableUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GodModeOwnableUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as GodModeOwnableUpgradeable;
  }
}
