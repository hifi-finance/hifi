/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UniswapV3PriceFeed,
  UniswapV3PriceFeedInterface,
} from "../../../contracts/oracles/UniswapV3PriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IErc20",
        name: "refAsset_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "refAsset",
        type: "address",
      },
    ],
    name: "IUniswapV3PriceFeed__RefAssetNotInPool",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refAsset",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200167e3803806200167e833981016040819052620000359162000479565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009c9190620004d5565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001059190620004d5565b9050816001600160a01b0316846001600160a01b031614156200023457806001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000161573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200018b919081019062000545565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620001ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001f4919081019062000545565b60405160200162000207929190620005fd565b604051602081830303815290604052600090805190602001906200022d929190620003ba565b50620002b6565b806001600160a01b0316846001600160a01b031614156200028e57816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000161573d6000803e3d6000fd5b604051639202155760e01b81526001600160a01b038516600482015260240160405180910390fd5b6001600160a01b0380861660805284811660a0526040805163313ce56760e01b815290519184169163313ce567916004808201926020929091908290030181865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033091906200063f565b60ff1660e08181525050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000379573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200039f91906200063f565b60ff1661010052505063ffffffff1660c05250620006a19050565b828054620003c89062000664565b90600052602060002090601f016020900481019282620003ec576000855562000437565b82601f106200040757805160ff191683800117855562000437565b8280016001018555821562000437579182015b82811115620004375782518255916020019190600101906200041a565b506200044592915062000449565b5090565b5b808211156200044557600081556001016200044a565b6001600160a01b03811681146200047657600080fd5b50565b6000806000606084860312156200048f57600080fd5b83516200049c8162000460565b6020850151909350620004af8162000460565b604085015190925063ffffffff81168114620004ca57600080fd5b809150509250925092565b600060208284031215620004e857600080fd5b8151620004f58162000460565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200052f57818101518382015260200162000515565b838111156200053f576000848401525b50505050565b6000602082840312156200055857600080fd5b81516001600160401b03808211156200057057600080fd5b818401915084601f8301126200058557600080fd5b8151818111156200059a576200059a620004fc565b604051601f8201601f19908116603f01168101908382118183101715620005c557620005c5620004fc565b81604052828152876020848701011115620005df57600080fd5b620005f283602083016020880162000512565b979650505050505050565b600083516200061181846020880162000512565b6201017960ed1b90830190815283516200063381600384016020880162000512565b01600301949350505050565b6000602082840312156200065257600080fd5b815160ff81168114620004f557600080fd5b600181811c908216806200067957607f821691505b602082108114156200069b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610f6962000715600039600081816104e4015281816105dd015261061e01526000818161051d01526105ab01526000818161010b01526102a3015260008181609101526104b101526000818160d50152818161034801526104260152610f696000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806354fd4d501161005b57806354fd4d50146101425780637284e416146101515780639a6fc8f514610166578063feaf968c146101b057600080fd5b80628b32f71461008c57806316f0115b146100d0578063313ce567146100f75780633c1d5df014610106575b600080fd5b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051600881526020016100c7565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100c7565b604051600181526020016100c7565b6101596101b8565b6040516100c79190610a5a565b610179610174366004610aaf565b610246565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c7565b61017961026b565b600080546101c590610adb565b80601f01602080910402602001604051908101604052809291908181526020018280546101f190610adb565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b505050505081565b60008060008060008561025761028f565b909790965060009550859450849350915050565b60008060008060008061027c61028f565b9096909550600094504293508492509050565b6040805160028082526060820183526000927f0000000000000000000000000000000000000000000000000000000000000000928492909160208301908036833701905050905081816000815181106102ea576102ea610b2c565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061031957610319610b2c565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd9061037d908590600401610b42565b600060405180830381865afa15801561039a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103c29190810190610c6d565b50905060008360030b826000815181106103de576103de610b2c565b6020026020010151836001815181106103f9576103f9610b2c565b602002602001015161040b9190610d4f565b6104159190610db5565b9050600061042282610661565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a69190610df3565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614156105985761050a7f0000000000000000000000000000000000000000000000000000000000000000600a610ef6565b6105766001600160a01b038316806105437f00000000000000000000000000000000000000000000000000000000000000006008610f02565b61054e90600a610ef6565b610571907801000000000000000000000000000000000000000000000000610f1a565b6109a5565b6105809190610f1a565b9550856105935760019550505050505090565b610659565b6105d16001600160a01b038216806105437f00000000000000000000000000000000000000000000000000000000000000006008610f02565b955085610618576106037f00000000000000000000000000000000000000000000000000000000000000006010610f02565b61060e90600a610ef6565b9550505050505090565b856106447f00000000000000000000000000000000000000000000000000000000000000006010610f02565b61064f90600a610ef6565b61060e9190610f2e565b505050505090565b60008060008360020b12610678578260020b610680565b8260020b6000035b9050620d89e88111156106bd5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640160405180910390fd5b6000600182166106de577001000000000000000000000000000000006106f0565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610724576ffff97272373d413259a46990580e213a0260801c5b6004821615610743576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610762576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610781576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156107a0576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156107bf576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156107de576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156107fe576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561081e576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561083e576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561085e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561087e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561089e576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156108be576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156108de576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156108ff576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561091f576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561093e576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561095b576b048a170391f7dc42444e8fa20260801c5b60008460020b131561097c57806000198161097857610978610d9f565b0490505b640100000000810615610990576001610993565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600014156109df57600084116109d457600080fd5b508290049050610a53565b8084116109eb57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b600060208083528351808285015260005b81811015610a8757858101830151858201604001528201610a6b565b81811115610a99576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610ac157600080fd5b813569ffffffffffffffffffff81168114610a5357600080fd5b600181811c90821680610aef57607f821691505b60208210811415610b1057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610b8057835163ffffffff1683529284019291840191600101610b5e565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bb557610bb5610b16565b604052919050565b600067ffffffffffffffff821115610bd757610bd7610b16565b5060051b60200190565b6001600160a01b0381168114610bf657600080fd5b50565b600082601f830112610c0a57600080fd5b81516020610c1f610c1a83610bbd565b610b8c565b82815260059290921b84018101918181019086841115610c3e57600080fd5b8286015b84811015610c62578051610c5581610be1565b8352918301918301610c42565b509695505050505050565b60008060408385031215610c8057600080fd5b825167ffffffffffffffff80821115610c9857600080fd5b818501915085601f830112610cac57600080fd5b81516020610cbc610c1a83610bbd565b82815260059290921b84018101918181019089841115610cdb57600080fd5b948201945b83861015610d095785518060060b8114610cfa5760008081fd5b82529482019490820190610ce0565b91880151919650909350505080821115610d2257600080fd5b50610d2f85828601610bf9565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff1901831281151615610d7a57610d7a610d39565b81667fffffffffffff018313811615610d9557610d95610d39565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80610dcc57610dcc610d9f565b667fffffffffffff19821460001982141615610dea57610dea610d39565b90059392505050565b600060208284031215610e0557600080fd5b8151610a5381610be1565b600181815b80851115610e4b578160001904821115610e3157610e31610d39565b80851615610e3e57918102915b93841c9390800290610e15565b509250929050565b600082610e6257506001610ef0565b81610e6f57506000610ef0565b8160018114610e855760028114610e8f57610eab565b6001915050610ef0565b60ff841115610ea057610ea0610d39565b50506001821b610ef0565b5060208310610133831016604e8410600b8410161715610ece575081810a610ef0565b610ed88383610e10565b8060001904821115610eec57610eec610d39565b0290505b92915050565b6000610a538383610e53565b60008219821115610f1557610f15610d39565b500190565b600082610f2957610f29610d9f565b500490565b600082610f3d57610f3d610d9f565b600160ff1b821460001984141615610f5757610f57610d39565b50059056fea164736f6c634300080c000a";

type UniswapV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceFeed> {
    return super.deploy(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    ) as Promise<UniswapV3PriceFeed>;
  }
  override getDeployTransaction(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceFeed {
    return super.attach(address) as UniswapV3PriceFeed;
  }
  override connect(signer: Signer): UniswapV3PriceFeed__factory {
    return super.connect(signer) as UniswapV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceFeedInterface {
    return new utils.Interface(_abi) as UniswapV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PriceFeed;
  }
}
