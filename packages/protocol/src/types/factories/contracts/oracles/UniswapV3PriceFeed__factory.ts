/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UniswapV3PriceFeed,
  UniswapV3PriceFeedInterface,
} from "../../../contracts/oracles/UniswapV3PriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IErc20",
        name: "refAsset_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "refAsset",
        type: "address",
      },
    ],
    name: "IUniswapV3PriceFeed__RefAssetNotInPool",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refAsset",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200163e3803806200163e833981016040819052620000349162000398565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009b9190620003f4565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001049190620003f4565b9050816001600160a01b0316846001600160a01b031614156200023357806001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000160573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200018a919081019062000464565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620001c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001f3919081019062000464565b604051602001620002069291906200051c565b604051602081830303815290604052600090805190602001906200022c929190620002d9565b50620002b5565b806001600160a01b0316846001600160a01b031614156200028d57816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000160573d6000803e3d6000fd5b604051639202155760e01b81526001600160a01b038516600482015260240160405180910390fd5b50506001600160a01b03928316608052911660a05263ffffffff1660c0526200059b565b828054620002e7906200055e565b90600052602060002090601f0160209004810192826200030b576000855562000356565b82601f106200032657805160ff191683800117855562000356565b8280016001018555821562000356579182015b828111156200035657825182559160200191906001019062000339565b506200036492915062000368565b5090565b5b8082111562000364576000815560010162000369565b6001600160a01b03811681146200039557600080fd5b50565b600080600060608486031215620003ae57600080fd5b8351620003bb816200037f565b6020850151909350620003ce816200037f565b604085015190925063ffffffff81168114620003e957600080fd5b809150509250925092565b6000602082840312156200040757600080fd5b815162000414816200037f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200044e57818101518382015260200162000434565b838111156200045e576000848401525b50505050565b6000602082840312156200047757600080fd5b81516001600160401b03808211156200048f57600080fd5b818401915084601f830112620004a457600080fd5b815181811115620004b957620004b96200041b565b604051601f8201601f19908116603f01168101908382118183101715620004e457620004e46200041b565b81604052828152876020848701011115620004fe57600080fd5b6200051183602083016020880162000431565b979650505050505050565b600083516200053081846020880162000431565b6201017960ed1b90830190815283516200055281600384016020880162000431565b01600301949350505050565b600181811c908216806200057357607f821691505b602082108114156200059557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05161104b620005f36000396000818161010b01526102a3015260008181609101526106d501526000818160d5015281816103480152818161042801528181610512015261064a015261104b6000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806354fd4d501161005b57806354fd4d50146101425780637284e416146101515780639a6fc8f514610166578063feaf968c146101b057600080fd5b80628b32f71461008c57806316f0115b146100d0578063313ce567146100f75780633c1d5df014610106575b600080fd5b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051600881526020016100c7565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100c7565b604051600181526020016100c7565b6101596101b8565b6040516100c79190610b47565b610179610174366004610b9c565b610246565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c7565b61017961026b565b600080546101c590610bc8565b80601f01602080910402602001604051908101604052809291908181526020018280546101f190610bc8565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b505050505081565b60008060008060008561025761028f565b909790965060009550859450849350915050565b60008060008060008061027c61028f565b9096909550600094504293508492509050565b6040805160028082526060820183526000927f0000000000000000000000000000000000000000000000000000000000000000928492909160208301908036833701905050905081816000815181106102ea576102ea610c19565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061031957610319610c19565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd9061037d908590600401610c2f565b600060405180830381865afa15801561039a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103c29190810190610d5a565b50905060008360030b826000815181106103de576103de610c19565b6020026020010151836001815181106103f9576103f9610c19565b602002602001015161040b9190610e3c565b6104159190610ea2565b905060006104228261074e565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190610ee0565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105099190610efd565b60ff16905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561056e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190610ee0565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f39190610efd565b60ff16905060006106466001600160a01b03851680610613866008610f20565b61061e90600a61101e565b61064190780100000000000000000000000000000000000000000000000061102a565b610a92565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ca9190610ee0565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316141561071f5761070e82600a61101e565b610718908261102a565b9850610743565b8061072b836010610f20565b61073690600a61101e565b610740919061102a565b98505b505050505050505090565b60008060008360020b12610765578260020b61076d565b8260020b6000035b9050620d89e88111156107aa5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640160405180910390fd5b6000600182166107cb577001000000000000000000000000000000006107dd565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610811576ffff97272373d413259a46990580e213a0260801c5b6004821615610830576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561084f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561086e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561088d576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156108ac576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156108cb576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156108eb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561090b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561092b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561094b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561096b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561098b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156109ab576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156109cb576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156109ec576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610a0c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610a2b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610a48576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610a69578060001981610a6557610a65610e8c565b0490505b640100000000810615610a7d576001610a80565b60005b60ff16602082901c0192505050919050565b600080806000198587098587029250828110838203039150508060001415610acc5760008411610ac157600080fd5b508290049050610b40565b808411610ad857600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b600060208083528351808285015260005b81811015610b7457858101830151858201604001528201610b58565b81811115610b86576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610bae57600080fd5b813569ffffffffffffffffffff81168114610b4057600080fd5b600181811c90821680610bdc57607f821691505b60208210811415610bfd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610c6d57835163ffffffff1683529284019291840191600101610c4b565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ca257610ca2610c03565b604052919050565b600067ffffffffffffffff821115610cc457610cc4610c03565b5060051b60200190565b6001600160a01b0381168114610ce357600080fd5b50565b600082601f830112610cf757600080fd5b81516020610d0c610d0783610caa565b610c79565b82815260059290921b84018101918181019086841115610d2b57600080fd5b8286015b84811015610d4f578051610d4281610cce565b8352918301918301610d2f565b509695505050505050565b60008060408385031215610d6d57600080fd5b825167ffffffffffffffff80821115610d8557600080fd5b818501915085601f830112610d9957600080fd5b81516020610da9610d0783610caa565b82815260059290921b84018101918181019089841115610dc857600080fd5b948201945b83861015610df65785518060060b8114610de75760008081fd5b82529482019490820190610dcd565b91880151919650909350505080821115610e0f57600080fd5b50610e1c85828601610ce6565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff1901831281151615610e6757610e67610e26565b81667fffffffffffff018313811615610e8257610e82610e26565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80610eb957610eb9610e8c565b667fffffffffffff19821460001982141615610ed757610ed7610e26565b90059392505050565b600060208284031215610ef257600080fd5b8151610b4081610cce565b600060208284031215610f0f57600080fd5b815160ff81168114610b4057600080fd5b60008219821115610f3357610f33610e26565b500190565b600181815b80851115610f73578160001904821115610f5957610f59610e26565b80851615610f6657918102915b93841c9390800290610f3d565b509250929050565b600082610f8a57506001611018565b81610f9757506000611018565b8160018114610fad5760028114610fb757610fd3565b6001915050611018565b60ff841115610fc857610fc8610e26565b50506001821b611018565b5060208310610133831016604e8410600b8410161715610ff6575081810a611018565b6110008383610f38565b806000190482111561101457611014610e26565b0290505b92915050565b6000610b408383610f7b565b60008261103957611039610e8c565b50049056fea164736f6c634300080c000a";

type UniswapV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceFeed> {
    return super.deploy(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    ) as Promise<UniswapV3PriceFeed>;
  }
  override getDeployTransaction(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceFeed {
    return super.attach(address) as UniswapV3PriceFeed;
  }
  override connect(signer: Signer): UniswapV3PriceFeed__factory {
    return super.connect(signer) as UniswapV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceFeedInterface {
    return new utils.Interface(_abi) as UniswapV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PriceFeed;
  }
}
