/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UniswapV3PriceFeed,
  UniswapV3PriceFeedInterface,
} from "../../../contracts/oracles/UniswapV3PriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IErc20",
        name: "refAsset_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "refAsset",
        type: "address",
      },
    ],
    name: "IUniswapV3PriceFeed__RefAssetNotInPool",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refAsset",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620016a3380380620016a3833981016040819052620000359162000479565b6000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000076573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200009c9190620004d5565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001059190620004d5565b9050816001600160a01b0316846001600160a01b031614156200023457806001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000161573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200018b919081019062000545565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620001ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001f4919081019062000545565b60405160200162000207929190620005fd565b604051602081830303815290604052600090805190602001906200022d929190620003ba565b50620002b6565b806001600160a01b0316846001600160a01b031614156200028e57816001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000161573d6000803e3d6000fd5b604051639202155760e01b81526001600160a01b038516600482015260240160405180910390fd5b6001600160a01b0380861660805284811660a0526040805163313ce56760e01b815290519184169163313ce567916004808201926020929091908290030181865afa1580156200030a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200033091906200063f565b60ff1660e08181525050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000379573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200039f91906200063f565b60ff1661010052505063ffffffff1660c05250620006a19050565b828054620003c89062000664565b90600052602060002090601f016020900481019282620003ec576000855562000437565b82601f106200040757805160ff191683800117855562000437565b8280016001018555821562000437579182015b82811115620004375782518255916020019190600101906200041a565b506200044592915062000449565b5090565b5b808211156200044557600081556001016200044a565b6001600160a01b03811681146200047657600080fd5b50565b6000806000606084860312156200048f57600080fd5b83516200049c8162000460565b6020850151909350620004af8162000460565b604085015190925063ffffffff81168114620004ca57600080fd5b809150509250925092565b600060208284031215620004e857600080fd5b8151620004f58162000460565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200052f57818101518382015260200162000515565b838111156200053f576000848401525b50505050565b6000602082840312156200055857600080fd5b81516001600160401b03808211156200057057600080fd5b818401915084601f8301126200058557600080fd5b8151818111156200059a576200059a620004fc565b604051601f8201601f19908116603f01168101908382118183101715620005c557620005c5620004fc565b81604052828152876020848701011115620005df57600080fd5b620005f283602083016020880162000512565b979650505050505050565b600083516200061181846020880162000512565b6201017960ed1b90830190815283516200063381600384016020880162000512565b01600301949350505050565b6000602082840312156200065257600080fd5b815160ff81168114620004f557600080fd5b600181811c908216806200067957607f821691505b602082108114156200069b57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610f876200071c60003960008181610502015281816105ea015261062a01526000818161053b01526105b801526000818161010b015281816102b601526103c7015260008181609101526104cf01526000818160d50152818161034601526104440152610f876000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806354fd4d501161005b57806354fd4d50146101425780637284e416146101515780639a6fc8f514610166578063feaf968c146101b057600080fd5b80628b32f71461008c57806316f0115b146100d0578063313ce567146100f75780633c1d5df014610106575b600080fd5b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051600881526020016100c7565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100c7565b604051600181526020016100c7565b6101596101b8565b6040516100c79190610a78565b610179610174366004610acd565b610246565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c7565b61017961026b565b600080546101c590610af9565b80601f01602080910402602001604051908101604052809291908181526020018280546101f190610af9565b801561023e5780601f106102135761010080835404028352916020019161023e565b820191906000526020600020905b81548152906001019060200180831161022157829003601f168201915b505050505081565b60008060008060008561025761028f565b909790965060009550859450849350915050565b60008060008060008061027c61028f565b9096909550600094504293508492509050565b604080516002808252606082018352600092839291906020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106102e8576102e8610b4a565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061031757610317610b4a565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd9061037b908590600401610b60565b600060405180830381865afa158015610398573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103c09190810190610c8b565b50905060007f000000000000000000000000000000000000000000000000000000000000000060030b826000815181106103fc576103fc610b4a565b60200260200101518360018151811061041757610417610b4a565b60200260200101516104299190610d6d565b6104339190610dd3565b905060006104408261067f565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610e11565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614156105a5576105287f0000000000000000000000000000000000000000000000000000000000000000600a610f14565b6105946001600160a01b038316806105617f00000000000000000000000000000000000000000000000000000000000000006008610f20565b61056c90600a610f14565b61058f907801000000000000000000000000000000000000000000000000610f38565b6109c3565b61059e9190610f38565b9450610668565b6105de6001600160a01b038216806105617f00000000000000000000000000000000000000000000000000000000000000006008610f20565b945084610624576106107f00000000000000000000000000000000000000000000000000000000000000006010610f20565b61061b90600a610f14565b94505050505090565b846106507f00000000000000000000000000000000000000000000000000000000000000006010610f20565b61065b90600a610f14565b6106659190610f4c565b94505b8461067857600194505050505090565b5050505090565b60008060008360020b12610696578260020b61069e565b8260020b6000035b9050620d89e88111156106db5760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640160405180910390fd5b6000600182166106fc5770010000000000000000000000000000000061070e565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610742576ffff97272373d413259a46990580e213a0260801c5b6004821615610761576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610780576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561079f576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156107be576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156107dd576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156107fc576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561081c576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561083c576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561085c576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561087c576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561089c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156108bc576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156108dc576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156108fc576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561091d576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561093d576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561095c576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610979576b048a170391f7dc42444e8fa20260801c5b60008460020b131561099a57806000198161099657610996610dbd565b0490505b6401000000008106156109ae5760016109b1565b60005b60ff16602082901c0192505050919050565b6000808060001985870985870292508281108382030391505080600014156109fd57600084116109f257600080fd5b508290049050610a71565b808411610a0957600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b600060208083528351808285015260005b81811015610aa557858101830151858201604001528201610a89565b81811115610ab7576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610adf57600080fd5b813569ffffffffffffffffffff81168114610a7157600080fd5b600181811c90821680610b0d57607f821691505b60208210811415610b2e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610b9e57835163ffffffff1683529284019291840191600101610b7c565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bd357610bd3610b34565b604052919050565b600067ffffffffffffffff821115610bf557610bf5610b34565b5060051b60200190565b6001600160a01b0381168114610c1457600080fd5b50565b600082601f830112610c2857600080fd5b81516020610c3d610c3883610bdb565b610baa565b82815260059290921b84018101918181019086841115610c5c57600080fd5b8286015b84811015610c80578051610c7381610bff565b8352918301918301610c60565b509695505050505050565b60008060408385031215610c9e57600080fd5b825167ffffffffffffffff80821115610cb657600080fd5b818501915085601f830112610cca57600080fd5b81516020610cda610c3883610bdb565b82815260059290921b84018101918181019089841115610cf957600080fd5b948201945b83861015610d275785518060060b8114610d185760008081fd5b82529482019490820190610cfe565b91880151919650909350505080821115610d4057600080fd5b50610d4d85828601610c17565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff1901831281151615610d9857610d98610d57565b81667fffffffffffff018313811615610db357610db3610d57565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80610dea57610dea610dbd565b667fffffffffffff19821460001982141615610e0857610e08610d57565b90059392505050565b600060208284031215610e2357600080fd5b8151610a7181610bff565b600181815b80851115610e69578160001904821115610e4f57610e4f610d57565b80851615610e5c57918102915b93841c9390800290610e33565b509250929050565b600082610e8057506001610f0e565b81610e8d57506000610f0e565b8160018114610ea35760028114610ead57610ec9565b6001915050610f0e565b60ff841115610ebe57610ebe610d57565b50506001821b610f0e565b5060208310610133831016604e8410600b8410161715610eec575081810a610f0e565b610ef68383610e2e565b8060001904821115610f0a57610f0a610d57565b0290505b92915050565b6000610a718383610e71565b60008219821115610f3357610f33610d57565b500190565b600082610f4757610f47610dbd565b500490565b600082610f5b57610f5b610dbd565b600160ff1b821460001984141615610f7557610f75610d57565b50059056fea164736f6c634300080c000a";

type UniswapV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceFeed> {
    return super.deploy(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    ) as Promise<UniswapV3PriceFeed>;
  }
  override getDeployTransaction(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceFeed {
    return super.attach(address) as UniswapV3PriceFeed;
  }
  override connect(signer: Signer): UniswapV3PriceFeed__factory {
    return super.connect(signer) as UniswapV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceFeedInterface {
    return new utils.Interface(_abi) as UniswapV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PriceFeed;
  }
}
