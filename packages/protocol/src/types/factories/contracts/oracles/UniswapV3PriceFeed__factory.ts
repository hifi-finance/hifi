/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UniswapV3PriceFeed,
  UniswapV3PriceFeedInterface,
} from "../../../contracts/oracles/UniswapV3PriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IErc20",
        name: "refAsset_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "refAsset",
        type: "address",
      },
    ],
    name: "IUniswapV3PriceFeed__RefAssetNotInPool",
    type: "error",
  },
  {
    inputs: [],
    name: "IUniswapV3PriceFeed__TwapCriteriaNotSatisfied",
    type: "error",
  },
  {
    inputs: [],
    name: "IUniswapV3PriceFeed__ZeroAddressPool",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refAsset",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101608060405234620000f05760608162001aa68038038091620000248285620000f6565b833981010312620000f05780516200006691620000418262000132565b6200005f6040602083015192620000588462000132565b0162000145565b916200030f565b60405161135390816200075382396080518181816101dc0152610c81015260a051818181610240015281816105470152610cf1015260c0518181816101810152610bec015260e051816105cf015261010051818181610d4e0152610dd201526101205181818161056a0152610d14015261014051818181610d8901528181610e080152610e400152f35b50600080fd5b601f909101601f19168101906001600160401b038211908210176200011a57604052565b5050634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381161415620000f057565b519063ffffffff82168214156200015857565b5050600080fd5b90816020910312620001585751620001778162000132565b90565b506040513d6000823e3d90fd5b519061ffff82168214156200015857565b519060ff82168214156200015857565b51908115158214156200015857565b908160e091031262000158578051620001d08162000132565b9160208201518060020b8114156200022c5791620001f16040820162000187565b91620002006060830162000187565b916200020f6080820162000187565b916200017760c06200022460a0850162000198565b9301620001a8565b50505050600080fd5b50634e487b7160e01b600052601160045260246000fd5b61ffff6001911661fffe811162000261570190565b6200026b62000235565b0190565b9061ffff8091169182156200028357160690565b50505050634e487b7160e01b600052601260045260246000fd5b91908260809103126200015857620002b58262000145565b9160208101518060060b8114156200022c57916200017760606040840151620002248162000132565b818110620002ea570390565b620002f462000235565b0390565b908160209103126200015857620001779062000198565b60a0919091526001600160a01b038082169182156200073c57604092835191630dfe168160e01b8352836004936020818681875afa9081156200072c575b60009162000713575b501660e052845163d21220a760e01b815284906020818681875afa90811562000703575b600091620006e0575b501661012081815260a0519095906001600160a01b031660e051909290620003bb906001600160a01b03165b6001600160a01b031690565b918316918214159182620006d4575b50506200069f57506080528351633850c7bd60e01b81529060e0908290849082905afa9081156200068f575b600090819262000663575b50608051620004329083906200042c9062000425906001600160a01b0316620003af565b936200024c565b6200026f565b60808651809381806200045d63252c09d760e01b968783528a830191909161ffff6020820193169052565b03915afa91821562000653575b600090819362000632575b509115620005a6575b506200049363ffffffff9182429116620002de565b9086161190811562000596575b50620005845760e05160209291906200050290620003af90620004c9906001600160a01b031682565b9386518681868163313ce56760e01b998a82525afa90811562000574575b6000916200055b575b5061010052516001600160a01b031690565b93518094819382525afa9081156200054b575b60009162000528575b506101405260c052565b6200054491506200053a3d82620000f6565b3d810190620002f8565b386200051e565b620005556200017a565b62000515565b6200056d91506200053a3d82620000f6565b38620004f0565b6200057e6200017a565b620004e7565b93505090505163a99e764f60e01b8152fd5b905061ffff8091161038620004a0565b6080805191925090620005c2906001600160a01b0316620003af565b91865192839182528180620005de888201906000602083019252565b03915afa90811562000622575b600091620005fc575b50386200047e565b6200061891506200060e3d82620000f6565b3d8101906200029d565b50505038620005f4565b6200062c6200017a565b620005eb565b9050620006479192506200060e3d82620000f6565b93929150503862000475565b6200065d6200017a565b6200046a565b9050620006819150620006773d82620000f6565b3d810190620001b7565b505050925090503862000401565b620006996200017a565b620003f6565b9451639202155760e01b81526001600160a01b03909516928501928352509294508493506020019150620006d09050565b0390fd5b141590503880620003ca565b620006fc9150620006f23d82620000f6565b3d8101906200015f565b3862000383565b6200070d6200017a565b6200037a565b620007259150620006f23d82620000f6565b3862000356565b620007366200017a565b6200034d565b5050505050600460405163ac88cda360e01b8152fdfe6040608081526004361015610015575b50600080fd5b600090813560e01c80628b32f71461021857806316f0115b146101c8578063313ce567146101ad5780633c1d5df01461016d57806354fd4d50146101525780637284e4161461012b5780639a6fc8f5146100d45763feaf968c14610079575061000f565b346100d0576100cc915061008c3661028e565b6100946106e9565b945169ffffffffffffffffffff94851681526020810193909352604083019190915260608201529116608082015290819060a0820190565b0390f35b5080fd5b50903461012657506100e536610339565b6100cc6100f0610bce565b925192839283608090600092949369ffffffffffffffffffff60a083019616825260208201528260408201528260608201520152565b809150fd5b50346100d0576100cc915061013f3661028e565b610147610530565b9051918291826102ef565b50903461012657506101633661028e565b5160018152602090f35b509034610126575061017e3661028e565b517f000000000000000000000000000000000000000000000000000000000000000063ffffffff168152602090f35b50903461012657506101be3661028e565b5160088152602090f35b50903461012657506101d93661028e565b517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602090f35b50503461028b57506102293661028e565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166080527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060a0016080f35b80fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc600091011261000f57565b918091926000905b8282106102da5750116102d3575050565b6000910152565b915080602091830151818601520182916102c2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6040936020845261033281518092816020880152602088880191016102ba565b0116010190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261000f5760043569ffffffffffffffffffff811681141561037d5790565b5050600080fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176103f557604052565b6103fd610384565b604052565b6020818303126104ad57805167ffffffffffffffff918282116104a357019082601f8301121561048d578151908111610496575b6040519261046c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601856103b4565b8184526020828401011161048d5761048a91602080850191016102ba565b90565b50505050600080fd5b61049e610384565b610436565b5050505050600080fd5b505050600080fd5b506040513d6000823e3d90fd5b602361052e9193929360405194816104e48793518092602080870191016102ba565b82017f202f200000000000000000000000000000000000000000000000000000000000602082015261051f82518093602087850191016102ba565b010360038101855201836103b4565b565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081167f000000000000000000000000000000000000000000000000000000000000000082168181141561067e575061048a9160049160405180927f95d89b41000000000000000000000000000000000000000000000000000000009081835282600096879485937f0000000000000000000000000000000000000000000000000000000000000000165afa938415610671575b8294610656575b5060046040518094819382525afa928315610649575b8093610624575b50506104c2565b6106419293503d90823e6106383d826103b4565b3d810190610402565b90388061061d565b6106516104b5565b610616565b61066a9194503d83823e6106383d826103b4565b9238610600565b6106796104b5565b6105f9565b61048a925060049160405180927f95d89b41000000000000000000000000000000000000000000000000000000009081835282600096879485935afa938415610671578294610656575060046040518094819382525afa9283156106495780936106245750506104c2565b6106f1610bce565b600091829042908290565b60209067ffffffffffffffff8111610716575b60051b0190565b61071e610384565b61070f565b604051906060820182811067ffffffffffffffff821117610751575b60405260028252604082602036910137565b610759610384565b61073f565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60209080511561079c570190565b6107a461075e565b0190565b60409080516001101561079c570190565b81601f820112156104ad578051916107d0836106fc565b926107de60405194856103b4565b808452602092838086019260051b820101928311610841578301905b828210610808575050505090565b815173ffffffffffffffffffffffffffffffffffffffff81168114156108355781529083019083016107fa565b50505050505050600080fd5b505050505050600080fd5b9190916040818403126104ad5780519267ffffffffffffffff938481116104a35782019381601f860112156104a357845194610887866106fc565b9061089560405192836103b4565b868252602096878084019160051b830101918583116108fa578801905b8282106108d157505050948301519081116104a35761048a92016107b9565b81518060060b8114156108eb5781529088019088016108b2565b50505050505050505050600080fd5b505050505050505050600080fd5b6020908160408183019282815285518094520193019160005b82811061092f575050505090565b835163ffffffff1685529381019392810192600101610921565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60060b9060060b9060008212827fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000000182128115166109d3575b82667fffffffffffff018213166109c7570390565b6109cf610949565b0390565b6109db610949565b6109b2565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60060b9060060b908115610a7a575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000821416610a6e570590565b610a76610949565b0590565b610a826109e0565b610a1f565b60ff168060ff03600811610a9c575b60080190565b610aa4610949565b610a96565b60ff168060ff03601011610abe575b60100190565b610ac6610949565b610ab8565b60ff16604d8111610add575b600a0a90565b610ae5610949565b610ad7565b8015610b0f575b78010000000000000000000000000000000000000000000000000490565b610b176109e0565b610af1565b8015610b48575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0490565b610b506109e0565b610b23565b8115610b5f570490565b610b676109e0565b0490565b8115610bc1575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82147f8000000000000000000000000000000000000000000000000000000000000000821416610a6e570590565b610bc96109e0565b610b72565b610c62610cef610cea610ce4610be2610723565b63ffffffff610cd97f000000000000000000000000000000000000000000000000000000000000000092610c2484610c198361078e565b9063ffffffff169052565b6000610c2f826107a8565b526040519788917f883bdbfd00000000000000000000000000000000000000000000000000000000835260048301610908565b039660008173ffffffffffffffffffffffffffffffffffffffff99818b7f0000000000000000000000000000000000000000000000000000000000000000165afa908115610e86575b600091610e64575b50610cd3610cc6610ccd610cc6846107a8565b5160060b90565b9261078e565b90610979565b911660030b90610a10565b60020b90565b610fa8565b7f000000000000000000000000000000000000000000000000000000000000000082167f000000000000000000000000000000000000000000000000000000000000000083161415610dc357610d8490610db392610d7c610d77610d727f0000000000000000000000000000000000000000000000000000000000000000610a87565b610acb565b610aea565b911680610e9a565b610dad7f0000000000000000000000000000000000000000000000000000000000000000610acb565b90610b55565b905b8115610dbd57565b60019150565b610df691610d7c610d77610d727f0000000000000000000000000000000000000000000000000000000000000000610a87565b8015610e3757610e3190610e2c610d727f0000000000000000000000000000000000000000000000000000000000000000610aa9565b610b6b565b90610db5565b5061048a610d727f0000000000000000000000000000000000000000000000000000000000000000610aa9565b610e7f913d90823e610e763d826103b4565b3d81019061084c565b5038610cb3565b610e8e6104b5565b610cab565b1561000f57565b90917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8383099280830292838086109503948086039514610f3357908291610ee3868411610e93565b096001821901821680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50509150610b67821515610e93565b15610f4957565b5060646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f54000000000000000000000000000000000000000000000000000000000000006044820152fd5b73ffffffffffffffffffffffffffffffffffffffff9060020b60008112156113325780600003905b610fdf620d89e8831115610f42565b60018216156113095770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b1691600281166112ed575b600481166112d1575b600881166112b5575b60108116611299575b6020811661127d575b60408116611261575b608090818116611246575b610100811661122b575b6102008116611210575b61040081166111f5575b61080081166111da575b61100081166111bf575b61200081166111a4575b6140008116611189575b618000811661116e575b620100008116611153575b620200008116611139575b62040000811661111f575b6208000016611104575b506000126110f6575b63ffffffff81166110ed5760ff60005b169060201c011690565b60ff60016110e3565b6110ff90610b1c565b6110d3565b6b048a170391f7dc42444e8fa26000929302901c91906110ca565b6d2216e584f5fa1ea926041bedfe98909302811c926110c0565b926e5d6af8dedb81196699c329225ee60402811c926110b5565b926f09aa508b5b7a84e1c677de54f3e99bc902811c926110aa565b926f31be135f97d08fd981231505542fcfa602811c9261109f565b926f70d869a156d2a1b890bb3df62baf32f702811c92611095565b926fa9f746462d870fdf8a65dc1f90e061e502811c9261108b565b926fd097f3bdfd2022b8845ad8f792aa582502811c92611081565b926fe7159475a2c29b7443b29c7fa6e889d902811c92611077565b926ff3392b0822b70005940c7a398e4b70f302811c9261106d565b926ff987a7253ac413176f2b074cf7815e5402811c92611063565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92611059565b926ffe5dee046a99a2a811c461f1969c305302811c9261104f565b916fff2ea16466c96a3843ec78b326b528610260801c91611044565b916fff973b41fa98c081472e6896dfb254c00260801c9161103b565b916fffcb9843d60f6159c9db58835c9266440260801c91611032565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91611029565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91611020565b916ffff97272373d413259a46990580e213a0260801c91611017565b70ffffffffffffffffffffffffffffffffff70010000000000000000000000000000000061100c565b80610fd056fea26c6578706572696d656e74616cf564736f6c634300080c0018";

type UniswapV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceFeed> {
    return super.deploy(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    ) as Promise<UniswapV3PriceFeed>;
  }
  override getDeployTransaction(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceFeed {
    return super.attach(address) as UniswapV3PriceFeed;
  }
  override connect(signer: Signer): UniswapV3PriceFeed__factory {
    return super.connect(signer) as UniswapV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceFeedInterface {
    return new utils.Interface(_abi) as UniswapV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PriceFeed;
  }
}
