/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  UniswapV3PriceFeed,
  UniswapV3PriceFeedInterface,
} from "../../../contracts/oracles/UniswapV3PriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "address",
      },
      {
        internalType: "contract IErc20",
        name: "refAsset_",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "twapInterval_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IErc20",
        name: "refAsset",
        type: "address",
      },
    ],
    name: "IUniswapV3PriceFeed__RefAssetNotInPool",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refAsset",
    outputs: [
      {
        internalType: "contract IErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twapInterval",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200152a3803806200152a8339810160408190526200003591620002cc565b816001600160a01b031660a0816001600160a01b031681525050826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b4919062000328565b6001600160a01b031660e0816001600160a01b031681525050826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200010c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000132919062000328565b6001600160a01b039081166101205260e05160a0518216911614801590620001715750610120516001600160a01b031660a0516001600160a01b031614155b15620001a35760a051604051639202155760e01b81526001600160a01b03909116600482015260240160405180910390fd5b826001600160a01b03166080816001600160a01b03168152505060e0516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620001fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022491906200034f565b60ff166101008160ff1681525050610120516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000274573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029a91906200034f565b60ff166101405263ffffffff1660c05250620003749050565b6001600160a01b0381168114620002c957600080fd5b50565b600080600060608486031215620002e257600080fd5b8351620002ef81620002b3565b60208501519093506200030281620002b3565b604085015190925063ffffffff811681146200031d57600080fd5b809150509250925092565b6000602082840312156200033b57600080fd5b81516200034881620002b3565b9392505050565b6000602082840312156200036257600080fd5b815160ff811681146200034857600080fd5b60805160a05160c05160e0516101005161012051610140516111106200041a600039600081816105fe015281816106e601526107260152600081816101bc0152818161034701526105a101526000818161063701526106b40152600061021601526000818161010b0152818161041301526105240152600081816091015281816101e60152818161029c01526105cb01526000818160d501526104a301526111106000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806354fd4d501161005b57806354fd4d50146101425780637284e416146101515780639a6fc8f514610166578063feaf968c146101b057600080fd5b80628b32f71461008c57806316f0115b146100d0578063313ce567146100f75780633c1d5df014610106575b600080fd5b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b37f000000000000000000000000000000000000000000000000000000000000000081565b604051600881526020016100c7565b61012d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100c7565b604051600181526020016100c7565b6101596101b8565b6040516100c79190610ba4565b610179610174366004610bd7565b6103a3565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100c7565b6101796103c8565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415610345577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610272573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261029a9190810190610c4a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103209190810190610c4a565b604051602001610331929190610cde565b604051602081830303815290604052905090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610272573d6000803e3d6000fd5b6000806000806000856103b46103ec565b909790965060009550859450849350915050565b6000806000806000806103d96103ec565b9096909550600094504293508492509050565b604080516002808252606082018352600092839291906020830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000008160008151811061044557610445610d1c565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061047457610474610d1c565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063883bdbfd906104d8908590600401610d32565b600060405180830381865afa1580156104f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051d9190810190610e21565b50905060007f000000000000000000000000000000000000000000000000000000000000000060030b8260008151811061055957610559610d1c565b60200260200101518360018151811061057457610574610d1c565b60200260200101516105869190610f03565b6105909190610f69565b9050600061059d8261077b565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614156106a1576106247f0000000000000000000000000000000000000000000000000000000000000000600a61108d565b6106906001600160a01b0383168061065d7f0000000000000000000000000000000000000000000000000000000000000000600861109c565b61066890600a61108d565b61068b9078010000000000000000000000000000000000000000000000006110c1565b610abf565b61069a91906110c1565b9450610764565b6106da6001600160a01b0382168061065d7f0000000000000000000000000000000000000000000000000000000000000000600861109c565b9450846107205761070c7f0000000000000000000000000000000000000000000000000000000000000000601061109c565b61071790600a61108d565b94505050505090565b8461074c7f0000000000000000000000000000000000000000000000000000000000000000601061109c565b61075790600a61108d565b61076191906110d5565b94505b8461077457600194505050505090565b5050505090565b60008060008360020b12610792578260020b61079a565b8260020b6000035b9050620d89e88111156107d75760405162461bcd60e51b81526020600482015260016024820152601560fa1b604482015260640160405180910390fd5b6000600182166107f85770010000000000000000000000000000000061080a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561083e576ffff97272373d413259a46990580e213a0260801c5b600482161561085d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561087c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561089b576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156108ba576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156108d9576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156108f8576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610918576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610938576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610958576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610978576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610998576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156109b8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156109d8576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156109f8576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610a19576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610a39576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610a58576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610a75576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610a96578060001981610a9257610a92610f53565b0490505b640100000000810615610aaa576001610aad565b60005b60ff16602082901c0192505050919050565b600080806000198587098587029250828110838203039150508060001415610af95760008411610aee57600080fd5b508290049050610b6d565b808411610b0557600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b60005b83811015610b8f578181015183820152602001610b77565b83811115610b9e576000848401525b50505050565b6020815260008251806020840152610bc3816040850160208701610b74565b601f01601f19169190910160400192915050565b600060208284031215610be957600080fd5b813569ffffffffffffffffffff81168114610b6d57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c4257610c42610c03565b604052919050565b600060208284031215610c5c57600080fd5b815167ffffffffffffffff80821115610c7457600080fd5b818401915084601f830112610c8857600080fd5b815181811115610c9a57610c9a610c03565b610cad601f8201601f1916602001610c19565b9150808252856020828501011115610cc457600080fd5b610cd5816020840160208601610b74565b50949350505050565b60008351610cf0818460208801610b74565b6201017960ed1b9083019081528351610d10816003840160208801610b74565b01600301949350505050565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015610d7057835163ffffffff1683529284019291840191600101610d4e565b50909695505050505050565b600067ffffffffffffffff821115610d9657610d96610c03565b5060051b60200190565b600082601f830112610db157600080fd5b81516020610dc6610dc183610d7c565b610c19565b82815260059290921b84018101918181019086841115610de557600080fd5b8286015b84811015610e165780516001600160a01b0381168114610e095760008081fd5b8352918301918301610de9565b509695505050505050565b60008060408385031215610e3457600080fd5b825167ffffffffffffffff80821115610e4c57600080fd5b818501915085601f830112610e6057600080fd5b81516020610e70610dc183610d7c565b82815260059290921b84018101918181019089841115610e8f57600080fd5b948201945b83861015610ebd5785518060060b8114610eae5760008081fd5b82529482019490820190610e94565b91880151919650909350505080821115610ed657600080fd5b50610ee385828601610da0565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff1901831281151615610f2e57610f2e610eed565b81667fffffffffffff018313811615610f4957610f49610eed565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80610f8057610f80610f53565b667fffffffffffff19821460001982141615610f9e57610f9e610eed565b90059392505050565b600181815b80851115610fe2578160001904821115610fc857610fc8610eed565b80851615610fd557918102915b93841c9390800290610fac565b509250929050565b600082610ff957506001611087565b8161100657506000611087565b816001811461101c576002811461102657611042565b6001915050611087565b60ff84111561103757611037610eed565b50506001821b611087565b5060208310610133831016604e8410600b8410161715611065575081810a611087565b61106f8383610fa7565b806000190482111561108357611083610eed565b0290505b92915050565b6000610b6d60ff841683610fea565b600060ff821660ff84168060ff038211156110b9576110b9610eed565b019392505050565b6000826110d0576110d0610f53565b500490565b6000826110e4576110e4610f53565b600160ff1b8214600019841416156110fe576110fe610eed565b50059056fea164736f6c634300080c000a";

type UniswapV3PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PriceFeed__factory extends ContractFactory {
  constructor(...args: UniswapV3PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PriceFeed> {
    return super.deploy(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    ) as Promise<UniswapV3PriceFeed>;
  }
  override getDeployTransaction(
    pool_: string,
    refAsset_: string,
    twapInterval_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pool_,
      refAsset_,
      twapInterval_,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3PriceFeed {
    return super.attach(address) as UniswapV3PriceFeed;
  }
  override connect(signer: Signer): UniswapV3PriceFeed__factory {
    return super.connect(signer) as UniswapV3PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PriceFeedInterface {
    return new utils.Interface(_abi) as UniswapV3PriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PriceFeed {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PriceFeed;
  }
}
