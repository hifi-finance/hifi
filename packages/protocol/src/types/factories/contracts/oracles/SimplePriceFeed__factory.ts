/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SimplePriceFeed,
  SimplePriceFeedInterface,
} from "../../../contracts/oracles/SimplePriceFeed";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "description_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "roundId_",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104b13803806104b183398101604081905261002f916100f8565b8051610042906000906020840190610049565b5050610202565b828054610055906101c7565b90600052602060002090601f01602090048101928261007757600085556100bd565b82601f1061009057805160ff19168380011785556100bd565b828001600101855582156100bd579182015b828111156100bd5782518255916020019190600101906100a2565b506100c99291506100cd565b5090565b5b808211156100c957600081556001016100ce565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561010b57600080fd5b82516001600160401b038082111561012257600080fd5b818501915085601f83011261013657600080fd5b815181811115610148576101486100e2565b604051601f8201601f19908116603f01168101908382118183101715610170576101706100e2565b81604052828152888684870101111561018857600080fd5b600093505b828410156101aa578484018601518185018701529285019261018d565b828411156101bb5760008684830101525b98975050505050505050565b600181811c908216806101db57607f821691505b602082108114156101fc57634e487b7160e01b600052602260045260246000fd5b50919050565b6102a0806102116000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80639a6fc8f5116100505780639a6fc8f5146100af578063f7a3080614610102578063feaf968c1461011757600080fd5b8063313ce5671461007757806354fd4d501461008b5780637284e4161461009a575b600080fd5b604051600881526020015b60405180910390f35b60405160018152602001610082565b6100a2610125565b60405161008291906101b7565b6100cb6100bd36600461020c565b600154909160009081908190565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a001610082565b61011561011036600461023f565b600155565b005b6001546000908142816100cb565b60606000805461013490610258565b80601f016020809104026020016040519081016040528092919081815260200182805461016090610258565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b5050505050905090565b600060208083528351808285015260005b818110156101e4578581018301518582016040015282016101c8565b818111156101f6576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561021e57600080fd5b813569ffffffffffffffffffff8116811461023857600080fd5b9392505050565b60006020828403121561025157600080fd5b5035919050565b600181811c9082168061026c57607f821691505b6020821081141561028d57634e487b7160e01b600052602260045260246000fd5b5091905056fea164736f6c634300080c000a";

type SimplePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePriceFeed__factory extends ContractFactory {
  constructor(...args: SimplePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    description_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimplePriceFeed> {
    return super.deploy(
      description_,
      overrides || {}
    ) as Promise<SimplePriceFeed>;
  }
  override getDeployTransaction(
    description_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(description_, overrides || {});
  }
  override attach(address: string): SimplePriceFeed {
    return super.attach(address) as SimplePriceFeed;
  }
  override connect(signer: Signer): SimplePriceFeed__factory {
    return super.connect(signer) as SimplePriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePriceFeedInterface {
    return new utils.Interface(_abi) as SimplePriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimplePriceFeed {
    return new Contract(address, _abi, signerOrProvider) as SimplePriceFeed;
  }
}
